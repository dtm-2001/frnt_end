{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService.ts"],"sourcesContent":["export interface KPI {\n  rowKey: string\n  value: string\n  status?: string\n}\n\nexport interface PlotDataPoint {\n  x: string\n  y: number\n  exceedsThreshold: boolean\n}\n\nexport interface TableDataPoint {\n  id: string\n  timePeriod: string\n  meanPrediction?: number\n  error?: number\n  percentageError?: number\n  status: string\n  abs_curr_per?: number\n  abs_ref_per?: number\n  difference?: number\n}\n\nexport interface OutletsExceedingThreshold {\n  id: string\n  y_true: number\n  y_pred: number\n  percentage_error: number\n}\n\nexport interface AllOutlets {\n  id: number\n  percentage_error: number\n  y_pred: number\n  y_true: number\n}\n\nexport interface DashboardData {\n  mode: string\n  businessUnit: string\n  useCase: string\n  ShortCode: string\n  alertKeeper: string\n  runtime: number\n}\n\n// **New** interface for the MSE time-series\nexport interface MSETrend {\n  MSE: number\n  time_period: string\n}\n\nexport interface FetchDataResult {\n  kpis: KPI[]\n  errors: {\n    plotData: PlotDataPoint[]\n    tableData: TableDataPoint[]\n  }\n  outletsExceedingThreshold: OutletsExceedingThreshold[]\n  xaiExplanation: string\n  currentPeriod: string\n  referencePeriod?: string\n  error_percentage_threshold: number\n  dashboardData: DashboardData\n  all_outlets: AllOutlets[]\n  mse_trend: MSETrend[]\n  sorted_periods: string[]\n  driftDetected: boolean\n  filtered_data?: any[]\n}\n\nexport async function fetchData({ runtime }: { runtime: string } = { runtime: \"\" }): Promise<FetchDataResult> {\n  try {\n    console.log(\"Fetching data from backend via proxy: /api/mode1/data\")\n    const response = await fetch(`/api/mode1/data${runtime ? `?runtime=${runtime}` : \"\"}`, {\n      credentials: \"include\",\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`)\n    }\n    const rawData = await response.json()\n    console.log(\"Parsed data:\", rawData)\n\n    // dashboard.json from public folder\n    console.log(\"Fetching dashboard.json from public folder\")\n    const dashResponse = await fetch(`/dashboard.json`)\n    if (!dashResponse.ok) {\n      throw new Error(`HTTP error fetching dashboard.json! Status: ${dashResponse.status}`)\n    }\n    const dashboardData: DashboardData = await dashResponse.json()\n\n    // Metrics nested under drift_state\n    const driftMetrics = rawData.drift_state?.metrics || {}\n\n    // Extract drift detection status\n    const driftDetected = rawData.drift_state?.drift_detected || false\n\n    // Extract sorted periods array\n    const sorted_periods = rawData.sorted_periods || []\n\n    // Get reference period (first element in sorted_periods if available)\n    const referencePeriod = sorted_periods.length > 0 ? sorted_periods[0] : \"N/A\"\n\n    const kpis: KPI[] = [\n      {\n        rowKey: \"Drift Detected\",\n        value: driftDetected ? \"Yes\" : \"No\",\n        status: driftDetected ? \"Alert\" : \"Normal\",\n      },\n      {\n        rowKey: \"Error Percentage Threshold\",\n        value: rawData.error_percentage_threshold?.toString() || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Average Percentage Error (All)\",\n        value: rawData.average_percentage_error_all != null ? rawData.average_percentage_error_all.toFixed(2) : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Average Percentage Error (Exceeding)\",\n        value:\n          rawData.average_percentage_error_exceeding != null\n            ? rawData.average_percentage_error_exceeding.toFixed(2)\n            : \"N/A\",\n        status: \"Alert\",\n      },\n      {\n        rowKey: \"kstest\",\n        value: driftMetrics.ks_statistic?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"wasserstein\",\n        value: driftMetrics.wasserstein_distance?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"mseRef\",\n        value: driftMetrics.mean_mse_reference?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"mseCurrent\",\n        value: driftMetrics.mean_mse_current?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"status\",\n        value: driftDetected ? \"Warning\" : \"Normal\",\n        status: driftDetected ? \"Warning\" : \"Normal\",\n      },\n    ]\n\n    // Extract filtered_data for the error comparison table\n    const filtered_data = rawData.filtered_data || []\n\n    // Map the filtered data to the table data format\n    const tableData = filtered_data.map((item: any) => {\n      const abs_curr_per = item.abs_curr_per || 0\n      const abs_ref_per = item.abs_ref_per || 0\n      const difference = abs_curr_per - abs_ref_per\n\n      return {\n        id: item.id?.toString() || \"\",\n        timePeriod: item.period || \"\",\n        abs_curr_per,\n        abs_ref_per,\n        difference,\n        status: difference > 0 ? \"Alert\" : \"Normal\",\n      }\n    })\n\n    const errors = {\n      plotData: (rawData.id_error || []).map((item: any) => ({\n        x: item.id?.toString() || \"\",\n        y: item.Mean_Prediction_Error || 0,\n        exceedsThreshold: Math.abs(item.Mean_Prediction_Error) > (rawData.error_percentage_threshold || 0),\n      })),\n      tableData:\n        tableData.length > 0\n          ? tableData\n          : (rawData.id_error || []).map((item: any) => ({\n              id: item.id?.toString() || \"\",\n              timePeriod: item.time_period || \"\",\n              meanPrediction: item.Mean_Prediction_Error || 0,\n              error: item.Mean_Prediction_Error || 0,\n              percentageError: Math.abs(item.Mean_Prediction_Error) || 0,\n              status:\n                Math.abs(item.Mean_Prediction_Error) > (rawData.error_percentage_threshold || 0) ? \"Alert\" : \"Normal\",\n            })),\n    }\n\n    const outletsExceedingThreshold: OutletsExceedingThreshold[] = (rawData.outlets_exceeding_threshold || []).map(\n      (item: any) => ({\n        id: item.id?.toString() || \"\",\n        y_true: item.y_true || 0,\n        y_pred: item.y_pred || 0,\n        percentage_error: item.percentage_error || 0,\n      }),\n    )\n\n    // Map your backend's MSE time series into our frontend shape\n    const mse_trend: MSETrend[] = (rawData.mse_trend || []).map((item: any) => ({\n      MSE: typeof item.MSE === \"number\" ? item.MSE : (item.mse ?? 0),\n      time_period: item.time_period || item.timePeriod || \"\",\n    }))\n\n    const xaiExplanation: string = rawData.explanation || \"No explanation available\"\n    const currentPeriod: string = rawData.current_period ?? rawData.currentPeriod ?? \"N/A\"\n\n    return {\n      kpis,\n      errors,\n      outletsExceedingThreshold,\n      xaiExplanation,\n      currentPeriod,\n      referencePeriod,\n      error_percentage_threshold: rawData.error_percentage_threshold || 0,\n      dashboardData,\n      all_outlets: rawData.all_outlets || [],\n      mse_trend,\n      sorted_periods,\n      driftDetected,\n      filtered_data,\n    }\n  } catch (error) {\n    console.error(\"Error fetching data:\", error)\n    throw new Error(\"Failed to fetch and process data\")\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/dashboardService.ts"],"sourcesContent":["/**\n * Shared typings\n * -------------------------------------------------------------------------- */\nexport interface Entry {\n  user: string\n  Runtime: string\n  BusinessUnit: string\n  useCase: string\n  ShortCode: string\n  JSONLink: string\n  alertKeeper: string\n}\n\nexport interface EntriesTableFilter {\n  user?: string\n  Runtime?: string\n  BusinessUnit?: string\n  useCase?: string\n  ShortCode?: string\n  JSONLink?: string\n  alertKeeper?: string          // single name – e.g. \"Kalpa\"\n}\n\n/**\n * Utility helpers\n * -------------------------------------------------------------------------- */\nconst eq = (a?: string, b?: string) =>\n  a !== undefined && b !== undefined ? a.toLowerCase() === b.toLowerCase() : true\n\n/**\n * Fetch the entries table from the API and **return only the rows that match\n * the supplied `filters` object**.  \n *\n * The API is *supposed* to filter server‑side, but we’ve seen it sometimes\n * return the full table (all business units, use‑cases, etc.).  To guarantee\n * correctness we:\n *\n *  1. Pass the query‑string parameters that mirror `filters`.\n *  2. Apply the same filters again in the client, so the caller *always* gets\n *     the precise subset it asked for, even if the backend forgets.\n */\nexport async function fetchEntriesTable(\n  filters: EntriesTableFilter = {},\n): Promise<Entry[]> {\n  /* ------------------------------------------------------------------ */\n  /* 1️⃣  Build the query string we’ll send to the server                */\n  /* ------------------------------------------------------------------ */\n  const params = new URLSearchParams()\n  if (filters.user)         params.append('user',         filters.user)\n  if (filters.Runtime)      params.append('Runtime',      filters.Runtime)\n  if (filters.BusinessUnit) params.append('BusinessUnit', filters.BusinessUnit)\n  if (filters.useCase)      params.append('useCase',      filters.useCase)\n  if (filters.ShortCode)    params.append('ShortCode',    filters.ShortCode)\n  if (filters.JSONLink)     params.append('JSONLink',     filters.JSONLink)\n  if (filters.alertKeeper)  params.append('alertKeeper',  filters.alertKeeper)\n\n  /* ------------------------------------------------------------------ */\n  /* 2️⃣  Fetch from the API                                             */\n  /* ------------------------------------------------------------------ */\n  const res = await fetch(`/api/entries-table?${params.toString()}`, {\n    credentials: 'include',\n  })\n\n  if (!res.ok) {\n    throw new Error(`Failed to fetch entries table: ${res.status} ${res.statusText}`)\n  }\n\n  const allRows: Entry[] = await res.json()\n\n  /* ------------------------------------------------------------------ */\n  /* 3️⃣  Apply the same filters client‑side (safety‑net)                */\n  /* ------------------------------------------------------------------ */\n  const rows = allRows.filter((e) => {\n    if (filters.user         && !eq(e.user,          filters.user        )) return false\n    if (filters.Runtime      &&  e.Runtime         !== filters.Runtime     ) return false\n    if (filters.BusinessUnit && !eq(e.BusinessUnit, filters.BusinessUnit)) return false\n    if (filters.useCase      && !eq(e.useCase,      filters.useCase     )) return false\n    if (filters.ShortCode    &&  e.ShortCode       !== filters.ShortCode   ) return false\n    if (filters.JSONLink     &&  e.JSONLink        !== filters.JSONLink    ) return false\n\n    /* alertKeeper: treat it as a comma‑separated list in the source    */\n    if (filters.alertKeeper) {\n      const keepers = e.alertKeeper\n        .split(',')\n        .map((s) => s.trim().toLowerCase())\n      if (!keepers.includes(filters.alertKeeper.toLowerCase())) return false\n    }\n\n    return true\n  })\n\n  return rows\n}\n"],"names":[],"mappings":"AAAA;;8EAE8E;;;AAqB9E;;8EAE8E,GAC9E,MAAM,KAAK,CAAC,GAAY,IACtB,MAAM,aAAa,MAAM,YAAY,EAAE,WAAW,OAAO,EAAE,WAAW,KAAK;AActE,eAAe,kBACpB,UAA8B,CAAC,CAAC;IAEhC,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,SAAS,IAAI;IACnB,IAAI,QAAQ,IAAI,EAAU,OAAO,MAAM,CAAC,QAAgB,QAAQ,IAAI;IACpE,IAAI,QAAQ,OAAO,EAAO,OAAO,MAAM,CAAC,WAAgB,QAAQ,OAAO;IACvE,IAAI,QAAQ,YAAY,EAAE,OAAO,MAAM,CAAC,gBAAgB,QAAQ,YAAY;IAC5E,IAAI,QAAQ,OAAO,EAAO,OAAO,MAAM,CAAC,WAAgB,QAAQ,OAAO;IACvE,IAAI,QAAQ,SAAS,EAAK,OAAO,MAAM,CAAC,aAAgB,QAAQ,SAAS;IACzE,IAAI,QAAQ,QAAQ,EAAM,OAAO,MAAM,CAAC,YAAgB,QAAQ,QAAQ;IACxE,IAAI,QAAQ,WAAW,EAAG,OAAO,MAAM,CAAC,eAAgB,QAAQ,WAAW;IAE3E,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,MAAM,MAAM,MAAM,CAAC,mBAAmB,EAAE,OAAO,QAAQ,IAAI,EAAE;QACjE,aAAa;IACf;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,IAAI,MAAM,CAAC,CAAC,EAAE,IAAI,UAAU,EAAE;IAClF;IAEA,MAAM,UAAmB,MAAM,IAAI,IAAI;IAEvC,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,OAAO,QAAQ,MAAM,CAAC,CAAC;QAC3B,IAAI,QAAQ,IAAI,IAAY,CAAC,GAAG,EAAE,IAAI,EAAW,QAAQ,IAAI,GAAW,OAAO;QAC/E,IAAI,QAAQ,OAAO,IAAU,EAAE,OAAO,KAAa,QAAQ,OAAO,EAAO,OAAO;QAChF,IAAI,QAAQ,YAAY,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,QAAQ,YAAY,GAAG,OAAO;QAC9E,IAAI,QAAQ,OAAO,IAAS,CAAC,GAAG,EAAE,OAAO,EAAO,QAAQ,OAAO,GAAQ,OAAO;QAC9E,IAAI,QAAQ,SAAS,IAAQ,EAAE,SAAS,KAAW,QAAQ,SAAS,EAAK,OAAO;QAChF,IAAI,QAAQ,QAAQ,IAAS,EAAE,QAAQ,KAAY,QAAQ,QAAQ,EAAM,OAAO;QAEhF,oEAAoE,GACpE,IAAI,QAAQ,WAAW,EAAE;YACvB,MAAM,UAAU,EAAE,WAAW,CAC1B,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,GAAG,WAAW;YAClC,IAAI,CAAC,QAAQ,QAAQ,CAAC,QAAQ,WAAW,CAAC,WAAW,KAAK,OAAO;QACnE;QAEA,OAAO;IACT;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode1/page.tsx"],"sourcesContent":["\"use client\"\nimport { useEffect, useState, useRef } from \"react\"\nimport ReactMarkdown from \"react-markdown\"\nimport { Chart, registerables, type Scale, type ChartEvent } from \"chart.js\"\nimport { fetchData } from \"../../services/backendService\"\nimport { fetchEntriesTable } from \"../../services/dashboardService\"\nimport { AlertCircle, AlertTriangle, CheckCircle, RefreshCw, Info, HelpCircle, X } from \"lucide-react\"\nimport { useSearchParams } from \"next/navigation\"\n\nChart.register(...registerables)\n\n// Interfaces for type safety\ninterface KPI {\n  rowKey: string\n  value: string\n  status?: string\n}\n\ninterface PlotDataPoint {\n  x: string\n  y: number\n  exceedsThreshold: boolean\n}\n\ninterface TableDataPoint {\n  id: string\n  timePeriod: string\n  meanPrediction?: number\n  error?: number\n  percentageError?: number\n  status: string\n  abs_curr_per?: number\n  abs_ref_per?: number\n  difference?: number\n}\n\ninterface OutletsExceedingThreshold {\n  id: string\n  y_true: number\n  y_pred: number\n  percentage_error: number\n}\n\n// Add the AllOutlets interface after the OutletsExceedingThreshold interface\ninterface AllOutlets {\n  id: number\n  percentage_error: number\n  y_pred: number\n  y_true: number\n}\n\ninterface MSETrend {\n  MSE: number\n  time_period: string\n}\n\ninterface ErrorDataState {\n  plotData: PlotDataPoint[]\n  tableData: TableDataPoint[]\n}\n\n// Define the entry table interface\ninterface EntryTableItem {\n  BusinessUnit: string\n  useCase: string\n  ShortCode: string\n  Runtime: string\n  alertKeeper: string\n}\n\n// Tooltip content for KS test and Wasserstein\nconst tooltipContent = {\n  kstest: {\n    title: \"Kolmogorov-Smirnov Test\",\n    content: `The KS test measures the maximum difference between two cumulative distribution functions. \nIt helps determine if two datasets differ significantly. Lower values indicate more similar distributions.\n\nTechnical explanation: The test statistic quantifies the distance between the empirical distribution function of the sample and the cumulative distribution function of the reference distribution.`,\n    image: \"/ks-test-diagram.png\",\n  },\n  wasserstein: {\n    title: \"Wasserstein Distance\",\n    content: `The Wasserstein distance (also called Earth Mover's Distance) measures the minimum \"cost\" of transforming one distribution into another.\n\nTechnical explanation: It represents the minimum amount of \"work\" required to transform one probability distribution into another, where \"work\" is measured as the amount of distribution weight that must be moved, multiplied by the distance it has to be moved.`,\n    image: \"/wasserstein-diagram.png\",\n  },\n}\n\n// Error percentage ranges for the bar chart - as requested by the user\nconst ERROR_RANGES = [\n  { min: 0, max: 10, label: \"0-10%\" },\n  { min: 10, max: 20, label: \"10-20%\" },\n  { min: 20, max: 30, label: \"20-30%\" },\n  { min: 30, max: 40, label: \"30-40%\" },\n  { min: 40, max: 50, label: \"40-50%\" },\n  { min: 50, max: 60, label: \"50-60%\" },\n  { min: 60, max: 70, label: \"60-70%\" },\n  { min: 70, max: 80, label: \"70-80%\" },\n  { min: 80, max: 90, label: \"80-90%\" },\n  { min: 90, max: 100, label: \"90-100%\" },\n  { min: 100, max: Number.POSITIVE_INFINITY, label: \">100%\" },\n]\n\n// Add this tooltip component after the ERROR_RANGES constant and before the Mode1Page function\nconst TooltipPopup = ({ type, onClose }: { type: string; onClose: () => void }) => {\n  const content = tooltipContent[type as keyof typeof tooltipContent]\n  if (!content) return null\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\" onClick={onClose}>\n      <div\n        className=\"bg-gray-800 border border-sky-700 rounded-lg shadow-xl max-w-2xl w-full p-6\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"flex justify-between items-start mb-4\">\n          <h3 className=\"text-xl font-bold text-sky-400\">{content.title}</h3>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-white transition-colors\"\n            aria-label=\"Close tooltip\"\n          >\n            <X className=\"h-5 w-5\" />\n          </button>\n        </div>\n        <div className=\"prose prose-invert prose-sky max-w-none mb-4\">\n          <p className=\"text-gray-300 whitespace-pre-line\">{content.content}</p>\n        </div>\n        {content.image && (\n          <div className=\"mt-4 flex justify-center\">\n            <img\n              src={content.image || \"/placeholder.svg\"}\n              alt={`${content.title} visualization`}\n              className=\"max-w-full h-auto rounded-md border border-gray-700\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default function Mode1Page() {\n  const searchParams = useSearchParams()\n  const businessUnitParam = searchParams.get(\"businessUnit\") || \"\"\n  const useCaseParam = searchParams.get(\"useCase\") || \"\"\n\n  const chartRef = useRef<Chart | null>(null)\n  const pieChartRef = useRef<Chart | null>(null)\n  const errorRangeChartRef = useRef<Chart | null>(null)\n\n  // Data states\n  const [kpis, setKpis] = useState<KPI[]>([])\n  const [errors, setErrors] = useState<ErrorDataState>({ plotData: [], tableData: [] })\n  const [outletsExceedingThreshold, setOutletsExceedingThreshold] = useState<OutletsExceedingThreshold[]>([])\n  const [allOutlets, setAllOutlets] = useState<AllOutlets[]>([])\n  const [xaiExplanation, setXaiExplanation] = useState<string>(\"No explanation available\")\n  const [currentPeriod, setCurrentPeriod] = useState<string>(\"N/A\")\n  const [referencePeriod, setReferencePeriod] = useState<string>(\"N/A\")\n  const [errorPercentageThreshold, setErrorPercentageThreshold] = useState<number>(0)\n  const [mseTrend, setMseTrend] = useState<MSETrend[]>([])\n\n  // Add these new state variables after the existing state declarations (around line 125)\n  const [sortedPeriods, setSortedPeriods] = useState<string[]>([])\n  const [driftDetected, setDriftDetected] = useState<boolean | null>(null)\n\n  // Static values from entries_table.json filtered by businessUnit and useCase\n  const [businessUnit, setBusinessUnit] = useState<string>(\"\")\n  const [useCase, setUseCase] = useState<string>(\"\")\n  const [shortCode, setShortCode] = useState<string>(\"\")\n  const [alertKeeperValue, setAlertKeeperValue] = useState<string>(\"\")\n\n  // Runtime & UI\n  const [runtimeValue, setRuntimeValue] = useState<string>(\"\")\n  const [runtimeOptions, setRuntimeOptions] = useState<string[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [backendError, setBackendError] = useState<string | null>(null)\n  const [statusDistribution, setStatusDistribution] = useState({ good: 65, warning: 25, error: 10 })\n  const [activeTooltip, setActiveTooltip] = useState<string | null>(null)\n\n  // Error range data for bar chart\n  const [errorRangeData, setErrorRangeData] = useState<{ range: string; count: number; outlets: AllOutlets[] }[]>([])\n  const [selectedRange, setSelectedRange] = useState<string | null>(null)\n  const [selectedRangeOutlets, setSelectedRangeOutlets] = useState<AllOutlets[]>([])\n\n  // Entries state (fetched via dashboardService)\n  const [entries, setEntries] = useState<EntryTableItem[]>([])\n\n  // 1) Fetch entries when businessUnitParam or useCaseParam change\n  useEffect(() => {\n    if (!businessUnitParam || !useCaseParam) return\n\n    const loadEntries = async () => {\n      try {\n        const fetched = await fetchEntriesTable({\n          BusinessUnit: businessUnitParam,\n          useCase: useCaseParam,\n        })\n        // Filter out any placeholder rows\n        const filtered = fetched.filter(\n          (entry) =>\n            entry.BusinessUnit !== \"Not Selected\" &&\n            entry.useCase !== \"Not Selected\" &&\n            entry.ShortCode !== \"Not Available\",\n        )\n        setEntries(filtered)\n\n        if (filtered.length === 0) {\n          setBusinessUnit(\"Not Selected\")\n          setUseCase(\"Not Selected\")\n          setShortCode(\"Not Available\")\n          setRuntimeOptions([])\n          setAlertKeeperValue(\"Not Selected\")\n          setRuntimeValue(\"\")\n        } else {\n          // Initialize with first entry\n          setBusinessUnit(filtered[0].BusinessUnit)\n          setUseCase(filtered[0].useCase)\n          setShortCode(filtered[0].ShortCode)\n\n          const uniqueRuntimes = Array.from(new Set(filtered.map((e) => e.Runtime)))\n          setRuntimeOptions(uniqueRuntimes)\n          setRuntimeValue(uniqueRuntimes[0])\n\n          const initialKeeper = filtered.find((e) => e.Runtime === uniqueRuntimes[0])?.alertKeeper || \"\"\n          setAlertKeeperValue(initialKeeper)\n        }\n      } catch (err) {\n        console.error(err)\n        setBackendError(err instanceof Error ? err.message : \"Failed to load entries\")\n      }\n    }\n\n    loadEntries()\n  }, [businessUnitParam, useCaseParam])\n\n  // 2) Update alertKeeper when runtimeValue or entries change\n  useEffect(() => {\n    if (!runtimeValue) return\n\n    const matched = entries.find((e) => e.Runtime === runtimeValue)\n    setAlertKeeperValue(matched?.alertKeeper || \"Not Selected\")\n  }, [runtimeValue, entries])\n\n  // 3) Fetch dynamic data (kpis, errors, etc.) whenever runtimeValue changes\n  const fetchAllData = async (): Promise<void> => {\n    setLoading(true)\n    setBackendError(null)\n    try {\n      const data = await fetchData({ runtime: runtimeValue })\n\n      // Dynamic data\n      setKpis(data.kpis || [])\n      setErrors(data.errors || { plotData: [], tableData: [] })\n      setOutletsExceedingThreshold(data.outletsExceedingThreshold || [])\n      setAllOutlets(data.all_outlets || [])\n      setXaiExplanation(data.xaiExplanation || \"No explanation available\")\n      setCurrentPeriod(data.currentPeriod || \"N/A\")\n      setReferencePeriod(data.referencePeriod || \"N/A\") // Add this line to extract reference period\n      setErrorPercentageThreshold(data.error_percentage_threshold ?? 0)\n      setMseTrend(data.mse_trend || [])\n\n      // Update the fetchAllData function to extract the sorted periods and drift detection status\n      // Find the fetchAllData function and modify it to include these new lines after the existing data extraction\n      // Around line 200 in the fetchAllData function, after setting other state variables:\n      setSortedPeriods(data.sorted_periods || [])\n      setDriftDetected(data.driftDetected || null)\n      // If the sorted periods array has at least one element, use it as the reference period\n      if (data.sorted_periods && data.sorted_periods.length > 0) {\n        setReferencePeriod(data.sorted_periods[0])\n      }\n\n      // Compute status distribution...\n      const goodCount =\n        data.errors?.tableData.filter((r) => (r.error ?? 0) < (data.error_percentage_threshold || 5) * 0.5).length || 0\n      const warningCount =\n        data.errors?.tableData.filter(\n          (r) =>\n            (r.error ?? 0) >= (data.error_percentage_threshold || 5) * 0.5 &&\n            (r.error ?? 0) < (data.error_percentage_threshold || 5),\n        ).length || 0\n      const errorCount =\n        data.errors?.tableData.filter((r) => (r.error ?? 0) >= (data.error_percentage_threshold || 5)).length || 0\n      const total = goodCount + warningCount + errorCount || 1\n\n      setStatusDistribution({\n        good: Math.round((goodCount / total) * 100),\n        warning: Math.round((warningCount / total) * 100),\n        error: Math.round((errorCount / total) * 100),\n      })\n\n      // Build error ranges\n      if (data.all_outlets?.length) {\n        const rangeData = ERROR_RANGES.map((range) => {\n          const outletsInRange = data.all_outlets.filter((outlet: AllOutlets) => {\n            const pe = outlet.percentage_error\n            return pe >= range.min && pe < range.max\n          })\n          return { range: range.label, count: outletsInRange.length, outlets: outletsInRange }\n        })\n        setErrorRangeData(rangeData)\n      }\n    } catch (err) {\n      console.error(err)\n      setBackendError(err instanceof Error ? err.message : \"Unknown error\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (runtimeValue) fetchAllData()\n  }, [runtimeValue])\n\n  // Re-render pie chart when data updates\n  useEffect(() => {\n    if (!loading) {\n      renderPieChart()\n      renderErrorRangeChart()\n    }\n  }, [loading, statusDistribution, errorRangeData])\n\n  // Handle bar chart click\n  const handleBarClick = (rangeIndex: number) => {\n    if (rangeIndex >= 0 && rangeIndex < errorRangeData.length) {\n      const range = errorRangeData[rangeIndex]\n      setSelectedRange(range.range)\n      setSelectedRangeOutlets(range.outlets)\n    }\n  }\n\n  // Pie chart renderer\n  const renderPieChart = () => {\n    const ctx = document.getElementById(\"statusPieChart\") as HTMLCanvasElement | null\n    if (!ctx) return\n\n    if (pieChartRef.current) {\n      pieChartRef.current.destroy()\n    }\n\n    pieChartRef.current = new Chart(ctx, {\n      type: \"pie\",\n      data: {\n        labels: [\"Good\", \"Warning\", \"Error\"],\n        datasets: [\n          {\n            data: [statusDistribution.good, statusDistribution.warning, statusDistribution.error],\n            backgroundColor: [\"rgba(52, 211, 153, 0.8)\", \"rgba(251, 191, 36, 0.8)\", \"rgba(239, 68, 68, 0.8)\"],\n            borderColor: [\"rgba(52, 211, 153, 1)\", \"rgba(251, 191, 36, 1)\", \"rgba(239, 68, 68, 1)\"],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: \"right\",\n            labels: {\n              color: \"#e5e7eb\",\n              font: { size: 14 },\n              generateLabels: (chart) =>\n                chart.data.labels!.map((l, i) => ({\n                  text: `${l}: ${chart.data.datasets![0].data[i]}%`,\n                  fillStyle: chart.data.datasets![0].backgroundColor![i] as string,\n                  strokeStyle: chart.data.datasets![0].borderColor![i] as string,\n                  lineWidth: 1,\n                  hidden: false,\n                  index: i,\n                })),\n            },\n          },\n          tooltip: {\n            callbacks: {\n              label: (ctx) => `${ctx.label}: ${ctx.raw}%`,\n            },\n          },\n        },\n      },\n    })\n  }\n\n  // Update the renderErrorRangeChart function to ensure it's using the correct data\n  const renderErrorRangeChart = () => {\n    const ctx = document.getElementById(\"errorRangeChart\") as HTMLCanvasElement | null\n    if (!ctx) return\n\n    console.log(\"Rendering error range chart with data:\", errorRangeData)\n\n    if (errorRangeChartRef.current) {\n      errorRangeChartRef.current.destroy()\n    }\n\n    // Color gradient for the bars - adjusted for the requested ranges\n    const gradientColors = [\n      \"rgba(52, 211, 153, 0.8)\", // Green for low errors (0-10%)\n      \"rgba(96, 165, 250, 0.8)\", // Blue (10-20%)\n      \"rgba(234, 179, 8, 0.8)\", // Amber (20-30%)\n      \"rgba(251, 191, 36, 0.8)\", // Yellow (30-40%)\n      \"rgba(251, 146, 60, 0.8)\", // Light Orange (40-50%)\n      \"rgba(249, 115, 22, 0.8)\", // Orange (50-60%)\n      \"rgba(236, 72, 153, 0.8)\", // Fuchsia (60-70%)\n      \"rgba(244, 114, 182, 0.8)\", // Pink (70-80%)\n      \"rgba(248, 113, 113, 0.8)\", // Light Red (80-90%)\n      \"rgba(244, 63, 94, 0.8)\", // Rose (90-100%)\n      \"rgba(239, 68, 68, 0.8)\", // Red for high errors (>100%)\n    ]\n\n    const borderColors = [\n      \"rgba(52, 211, 153, 1)\",\n      \"rgba(96, 165, 250, 1)\",\n      \"rgba(234, 179, 8, 1)\",\n      \"rgba(251, 191, 36, 1)\",\n      \"rgba(251, 146, 60, 1)\",\n      \"rgba(249, 115, 22, 1)\",\n      \"rgba(236, 72, 153, 1)\",\n      \"rgba(244, 114, 182, 1)\",\n      \"rgba(248, 113, 113, 1)\",\n      \"rgba(244, 63, 94, 1)\",\n      \"rgba(239, 68, 68, 1)\",\n    ]\n\n    // Use errorRangeData directly without sorting to maintain the natural order of ranges\n    const dataToUse = errorRangeData\n\n    errorRangeChartRef.current = new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: dataToUse.map((d) => d.range),\n        datasets: [\n          {\n            label: \"Number of IDs\",\n            data: dataToUse.map((d) => d.count),\n            backgroundColor: gradientColors.slice(0, dataToUse.length),\n            borderColor: borderColors.slice(0, dataToUse.length),\n            borderWidth: 1,\n            borderRadius: 4,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: true,\n            position: \"top\",\n            labels: {\n              color: \"#e5e7eb\",\n              font: { size: 14 },\n            },\n          },\n          title: {\n            display: true,\n            text: \"ID Distribution by Error Percentage Range\",\n            color: \"#38bdf8\",\n            font: { size: 16, weight: \"bold\" },\n          },\n          tooltip: {\n            callbacks: {\n              label: (ctx) => `IDs: ${ctx.raw}`,\n              afterLabel: (ctx) => `Click to view details`,\n            },\n            backgroundColor: \"rgba(15, 23, 42, 0.8)\",\n            titleColor: \"#38bdf8\",\n            bodyColor: \"#e5e7eb\",\n            borderColor: \"#1e40af\",\n            borderWidth: 1,\n            padding: 10,\n          },\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: \"Error Percentage Range\",\n              color: \"#38bdf8\",\n              font: { weight: \"bold\" },\n            },\n            grid: {\n              color: \"rgba(148, 163, 184, 0.1)\",\n              borderColor: \"rgba(148, 163, 184, 0.2)\",\n            },\n            ticks: {\n              color: \"#e5e7eb\",\n              font: { size: 12 },\n            },\n          },\n          y: {\n            title: {\n              display: true,\n              text: \"Number of IDs\",\n              color: \"#38bdf8\",\n              font: { weight: \"bold\" },\n            },\n            beginAtZero: true,\n            grid: {\n              color: \"rgba(148, 163, 184, 0.1)\",\n              borderColor: \"rgba(148, 163, 184, 0.2)\",\n            },\n            ticks: {\n              color: \"#e5e7eb\",\n              font: { size: 12 },\n              precision: 0, // Ensure whole numbers for ID counts\n            },\n          },\n        },\n        onClick: (_event: ChartEvent, elements: any[]) => {\n          if (elements && elements.length > 0) {\n            const index = elements[0].index\n            if (index !== undefined && index >= 0 && index < dataToUse.length) {\n              handleBarClick(index)\n            }\n          }\n        },\n      },\n    })\n  }\n\n  // Helpers for KPIs\n  const calculateMseChange = () => {\n    const refMse = Number.parseFloat(kpis.find((k) => k.rowKey === \"mseRef\")?.value || \"0\")\n    const currMse = Number.parseFloat(kpis.find((k) => k.rowKey === \"mseCurrent\")?.value || \"0\")\n    if (refMse === 0) return \"N/A\"\n    const change = ((currMse - refMse) / refMse) * 100\n    return `${change >= 0 ? \"+\" : \"\"}${change.toFixed(2)}%`\n  }\n\n  const getStatusColor = (s?: string) => {\n    if (!s) return \"text-gray-400\"\n    switch (s.toLowerCase()) {\n      case \"warning\":\n        return \"text-amber-400\"\n      case \"error\":\n        return \"text-rose-500\"\n      case \"success\":\n        return \"text-emerald-400\"\n      default:\n        return \"text-sky-400\"\n    }\n  }\n  const getStatusIcon = (s?: string) => {\n    if (!s) return <Info className=\"h-5 w-5 text-gray-400\" />\n    switch (s.toLowerCase()) {\n      case \"warning\":\n        return <AlertTriangle className=\"h-5 w-5 text-amber-400\" />\n      case \"error\":\n        return <AlertCircle className=\"h-5 w-5 text-rose-500\" />\n      case \"success\":\n        return <CheckCircle className=\"h-5 w-5 text-emerald-400\" />\n      default:\n        return <Info className=\"h-5 w-5 text-sky-400\" />\n    }\n  }\n\n  // Update the header section to include the drift detection status\n  // Find the header section (around line 300) and replace it with:\n  return (\n    <div className=\"bg-gradient-to-b from-gray-950 to-gray-900 min-h-screen flex flex-col\">\n      <title>Mode 1 | Business Dashboard</title>\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        {/* Backend Error */}\n        {backendError && (\n          <div className=\"bg-rose-950/40 border border-rose-800/60 rounded-lg p-4 mb-6 backdrop-blur-sm shadow-lg\">\n            <div className=\"flex items-center\">\n              <AlertCircle className=\"h-5 w-5 text-rose-400 mr-2\" />\n              <h3 className=\"text-lg font-medium text-rose-300\">Backend Error</h3>\n            </div>\n            <p className=\"mt-2 text-rose-200\">{backendError}</p>\n            <button\n              onClick={fetchAllData}\n              className=\"mt-3 px-4 py-2 bg-rose-800/50 hover:bg-rose-700/70 text-white rounded-md text-sm flex items-center gap-2\"\n            >\n              <RefreshCw className=\"h-4 w-4\" /> Retry\n            </button>\n          </div>\n        )}\n\n        {/* Header */}\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\">\n          <h2 className=\"text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-2\">\n            OCTAVE – RG Dashboard\n          </h2>\n          <div className=\"flex flex-col sm:flex-row sm:items-center gap-4\">\n            <div className=\"text-sky-300 flex flex-col sm:flex-row sm:items-center gap-2\">\n              <p className=\"flex items-center gap-2\">\n                <span className=\"inline-block h-2 w-2 rounded-full bg-sky-400 animate-pulse\" />\n                Current Period: {loading ? \"Loading...\" : currentPeriod}\n              </p>\n              <p className=\"flex items-center gap-2 sm:ml-6\">\n                <span className=\"inline-block h-2 w-2 rounded-full bg-gray-400\" />\n                Reference Period: {loading ? \"Loading...\" : referencePeriod}\n              </p>\n            </div>\n            {driftDetected !== null && (\n              <div\n                className={`flex items-center gap-2 sm:ml-6 px-3 py-1.5 rounded-md ${driftDetected ? \"bg-rose-900/40 border border-rose-700\" : \"bg-emerald-900/40 border border-emerald-700\"}`}\n              >\n                <span className=\"font-medium text-gray-200\">Drift Detected:</span>\n                <span className={`font-bold ${driftDetected ? \"text-rose-400\" : \"text-emerald-400\"}`}>\n                  {driftDetected ? \"Yes\" : \"No\"}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Static Filters Box and Runtime in 2:1 ratio */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6\">\n          {/* Static Filters Box - 2/3 */}\n          <div className=\"lg:col-span-2 bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded-lg border border-sky-800/30 shadow-md\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <div className=\"mb-4\">\n                  <span className=\"text-lg font-medium text-sky-300\">Business Unit: </span>\n                  <span className=\"text-sky-200\">{loading ? \"Loading…\" : businessUnit || \"Not Selected\"}</span>\n                </div>\n                <div>\n                  <span className=\"text-lg font-medium text-sky-300\">Use Case: </span>\n                  <span className=\"text-sky-200\">{loading ? \"Loading…\" : useCase || \"Not Selected\"}</span>\n                </div>\n              </div>\n              <div>\n                <div className=\"mb-4\">\n                  <span className=\"text-lg font-medium text-sky-300\">Short Code: </span>\n                  <span className=\"text-sky-200\">{loading ? \"Loading…\" : shortCode || \"Not Available\"}</span>\n                </div>\n                <div>\n                  <span className=\"text-lg font-medium text-sky-300\">Alert Keeper: </span>\n                  <span className=\"text-sky-200\">{loading ? \"Loading…\" : alertKeeperValue || \"Not Selected\"}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Runtime - 1/3 */}\n          <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded-lg border border-sky-800/30 shadow-md\">\n            <h3 className=\"text-lg font-medium text-sky-300 mb-2\">Runtime</h3>\n            <select\n              className=\"w-full bg-gray-800/80 border border-sky-700/50 rounded-md p-2 text-white focus:ring-2 focus:ring-sky-500\"\n              value={runtimeValue}\n              onChange={(e) => setRuntimeValue(e.target.value)}\n              disabled={runtimeOptions.length === 0}\n            >\n              {runtimeOptions.length === 0 ? (\n                <option value=\"\">No runtimes available</option>\n              ) : (\n                runtimeOptions.map((runtime) => (\n                  <option key={runtime} value={runtime}>\n                    {runtime}\n                  </option>\n                ))\n              )}\n            </select>\n          </div>\n        </div>\n\n        {/* MAPE/MSE Plot and Status Distribution */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6\">\n          {/* MAPE/MSE Plot */}\n          <div className=\"lg:col-span-2 bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 border border-gray-700/50 backdrop-blur-sm\">\n            <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n              MSE Trend Analysis\n            </h2>\n            <div className=\"h-80 bg-gray-800/60 rounded-lg p-4 border border-gray-700/50\">\n              {loading ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <svg\n                    className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    />\n                  </svg>\n                  <span className=\"text-sky-300\">Loading plot data...</span>\n                </div>\n              ) : (\n                <canvas\n                  id=\"mapeMseChart\"\n                  className=\"w-full h-full\"\n                  ref={(el) => {\n                    if (!loading && el) {\n                      const ctx = el.getContext(\"2d\")\n                      if (ctx) {\n                        if (chartRef.current) {\n                          chartRef.current.destroy()\n                        }\n                        chartRef.current = new Chart(ctx, {\n                          type: \"line\",\n                          data: {\n                            labels: mseTrend.map((d) => d.time_period),\n                            datasets: [\n                              {\n                                label: \"MSE Values\",\n                                data: mseTrend.map((d) => d.MSE),\n                                borderColor: \"rgb(56, 189, 248)\",\n                                backgroundColor: \"rgba(56, 189, 248, 0.2)\",\n                                borderWidth: 2,\n                                tension: 0.3,\n                                fill: true,\n                                pointBackgroundColor: \"rgba(56, 189, 248, 1)\",\n                                pointBorderColor: \"#fff\",\n                                pointRadius: 4,\n                                pointHoverRadius: 6,\n                              },\n                            ],\n                          },\n                          options: {\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            plugins: {\n                              legend: {\n                                labels: { color: \"#e5e7eb\", font: { weight: \"bold\" } },\n                                title: {\n                                  display: true,\n                                  text: \"MSE Trend Analysis\",\n                                  color: \"#38bdf8\",\n                                  font: { size: 16, weight: \"bold\" },\n                                },\n                              },\n                              tooltip: {\n                                mode: \"index\",\n                                intersect: false,\n                                backgroundColor: \"rgba(15, 23, 42, 0.8)\",\n                                titleColor: \"#38bdf8\",\n                                bodyColor: \"#e5e7eb\",\n                                borderColor: \"#1e40af\",\n                                borderWidth: 1,\n                                padding: 10,\n                                callbacks: {\n                                  label: (ctx) => `MSE: ${ctx.parsed.y.toFixed(4)}`,\n                                },\n                              },\n                            },\n                            scales: {\n                              x: {\n                                title: {\n                                  display: true,\n                                  text: \"Time Period\",\n                                  color: \"#38bdf8\",\n                                  font: { weight: \"bold\" },\n                                },\n                                grid: {\n                                  color: \"rgba(148, 163, 184, 0.1)\",\n                                  borderColor: \"rgba(148, 163, 184, 0.2)\",\n                                },\n                                ticks: {\n                                  color: \"#e5e7eb\",\n                                  font: { size: 12 },\n                                },\n                              },\n                              y: {\n                                title: {\n                                  display: true,\n                                  text: \"MSE Value\",\n                                  color: \"#38bdf8\",\n                                  font: { weight: \"bold\" },\n                                },\n                                beginAtZero: true,\n                                grid: {\n                                  color: \"rgba(148, 163, 184, 0.1)\",\n                                  borderColor: \"rgba(148, 163, 184, 0.2)\",\n                                },\n                                ticks: {\n                                  color: \"#e5e7eb\",\n                                  font: { size: 12 },\n                                  callback: function (\n                                    this: Scale<unknown>,\n                                    tickValue: string | number,\n                                  ): string | number {\n                                    if (typeof tickValue === \"number\") {\n                                      return tickValue.toFixed(4)\n                                    }\n                                    return tickValue\n                                  },\n                                },\n                              },\n                            },\n                            interaction: { mode: \"index\", intersect: false },\n                            hover: { mode: \"nearest\", intersect: true },\n                            animation: { duration: 1500, easing: \"easeOutQuart\" },\n                            elements: { line: { tension: 0.4 } },\n                          },\n                        })\n                      }\n                    }\n                  }}\n                />\n              )}\n            </div>\n          </div>\n\n          {/* Status Distribution */}\n          <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded-lg border border-sky-800/30 shadow-md\">\n            <h3 className=\"text-lg font-medium text-sky-300 mb-2\">Status Distribution</h3>\n            <div className=\"h-64\">\n              <canvas id=\"statusPieChart\"></canvas>\n            </div>\n          </div>\n        </div>\n\n        {/* KPIs Section */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Key Performance Indicators\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {/* KS-test & Wasserstein */}\n            <div\n              className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md\n hover:shadow-sky-900/20 hover:border-sky-700/50 transition-all relative\"\n            >\n              <button\n                onClick={() => setActiveTooltip(\"kstest\")}\n                className=\"absolute top-2 right-2 text-sky-400 hover:text-sky-300 transition-colors\"\n                aria-label=\"KS Test Information\"\n              >\n                <HelpCircle className=\"h-5 w-5\" />\n              </button>\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2\">KStest</h3>\n              <div className=\"flex items-center\">\n                <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                  <Info className=\"h-5 w-5 text-sky-300\" />\n                </div>\n                <p className=\"text-xl font-semibold text-white\">\n                  {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"kstest\")?.value || \"N/A\"}\n                </p>\n              </div>\n              <div className=\"mt-4 border-t border-sky-800/30 pt-4\">\n                <h3 className=\"text-lg font-medium text-sky-300 mb-2\">Wasserstein</h3>\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                    <Info className=\"h-5 w-5 text-sky-300\" />\n                  </div>\n                  <p className=\"text-xl font-semibold text-white\">\n                    {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"wasserstein\")?.value || \"N/A\"}\n                  </p>\n                </div>\n                <button\n                  onClick={() => setActiveTooltip(\"wasserstein\")}\n                  className=\"absolute bottom-2 right-2 text-sky-400 hover:text-sky-300 transition-colors\"\n                  aria-label=\"Wasserstein Distance Information\"\n                >\n                  <HelpCircle className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* MSE Metrics */}\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md hover:shadow-sky-900/20 hover:border-sky-700/50 transition-all\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2\">MSE Metrics</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-400\">Ref MSE:</span>\n                  <span className=\"text-sm font-medium text-white\">\n                    {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"mseRef\")?.value || \"N/A\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-400\">Curr MSE:</span>\n                  <span className=\"text-sm font-medium text-white\">\n                    {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"mseCurrent\")?.value || \"N/A\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-400\">Change:</span>\n                  <span\n                    className={`text-sm font-medium ${calculateMseChange().startsWith(\"+\") ? \"text-rose-400\" : \"text-emerald-400\"}`}\n                  >\n                    {loading ? \"Loading...\" : calculateMseChange()}\n                  </span>\n                </div>\n                <div className=\"pt-2 border-t border-sky-800/30\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                      {getStatusIcon(kpis.find((k) => k.rowKey === \"status\")?.value)}\n                    </div>\n                    <p\n                      className={`text-xl font-semibold ${getStatusColor(kpis.find((k) => k.rowKey === \"status\")?.value)}`}\n                    >\n                      {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"status\")?.value || \"N/A\"}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Additional Metrics */}\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md hover:shadow-sky-900/20 hover:border-sky-700/50 transition-all\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2\">Error Metrics</h3>\n              <div className=\"space-y-4\">\n                {kpis\n                  .filter((k) =>\n                    [\n                      \"Error Percentage Threshold\",\n                      \"Average Percentage Error (All)\",\n                      \"Average Percentage Error (Exceeding)\",\n                      \"Drift Detected\",\n                    ].includes(k.rowKey),\n                  )\n                  .map((kpi) => (\n                    <div\n                      key={kpi.rowKey}\n                      className={kpi.rowKey !== kpis[0].rowKey ? \"pt-3 border-t border-sky-800/30\" : \"\"}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm text-gray-400\">{kpi.rowKey}:</span>\n                        <span\n                          className={`text-sm font-medium ${kpi.rowKey === \"Drift Detected\" ? (kpi.value === \"Yes\" ? \"text-rose-400\" : \"text-emerald-400\") : getStatusColor(kpi.status)}`}\n                        >\n                          {kpi.value}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                {kpis\n                  .filter(\n                    (k) =>\n                      ![\n                        \"kstest\",\n                        \"wasserstein\",\n                        \"mseRef\",\n                        \"mseCurrent\",\n                        \"status\",\n                        \"Error Percentage Threshold\",\n                        \"Average Percentage Error (All)\",\n                        \"Average Percentage Error (Exceeding)\",\n                        \"Drift Detected\",\n                      ].includes(k.rowKey),\n                  )\n                  .map((kpi) => (\n                    <div key={kpi.rowKey} className=\"pt-3 border-t border-sky-800/30\">\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm text-gray-400\">{kpi.rowKey}:</span>\n                        <span className={`text-sm font-medium ${getStatusColor(kpi.status)}`}>{kpi.value}</span>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Error Tables Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          {/* Error Comparison */}\n          <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 border border-gray-700/50 backdrop-blur-sm\">\n            <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n              Error Comparison (Current Period)\n            </h2>\n            {loading ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <svg\n                  className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n                <span className=\"text-sky-300\">Loading error data...</span>\n              </div>\n            ) : (\n              <div className=\"max-h-96 overflow-y-auto rounded-lg border border-gray-700/50\">\n                <table className=\"min-w-full divide-y divide-gray-700/50\">\n                  <thead className=\"bg-gray-800/60\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                        NO.\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                        ID\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                        Current Error\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                        Reference Error\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                        Difference\n                      </th>\n                    </tr>\n                  </thead>\n\n                  <tbody className=\"bg-gray-800/30 divide-y divide-gray-700/50\">\n                    {errors.tableData\n                      .slice()\n                      // Filter out duplicate IDs, keeping only the first occurrence\n                      .filter((row, index, self) => index === self.findIndex((r) => r.id === row.id))\n                      .sort((a, b) => (b.difference ?? 0) - (a.difference ?? 0))\n                      .map((row: TableDataPoint, i: number) => (\n                        <tr key={row.id} className=\"hover:bg-gray-700/30 transition-colors duration-150\">\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{i + 1}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{row.id}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sky-400 font-medium\">\n                            {(row.abs_curr_per ?? 0).toFixed(2)}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sky-400 font-medium\">\n                            {(row.abs_ref_per ?? 0).toFixed(2)}\n                          </td>\n                          <td\n                            className={`px-6 py-4 whitespace-nowrap text-sm font-medium ${(row.difference ?? 0) > 0 ? \"text-rose-400\" : \"text-emerald-400\"}`}\n                          >\n                            {(row.difference ?? 0) > 0 ? \"+\" : \"\"}\n                            {(row.difference ?? 0).toFixed(2)}\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n\n          {/* Threshold Exceedances */}\n          <div className=\"bg-gradient-to-br from-rose-950/30 to-gray-900/90 rounded-xl shadow-xl overflow-hidden p-6 border border-rose-900/30 backdrop-blur-sm\">\n            <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-rose-400 to-rose-600 mb-4\">\n              Threshold Exceedances{\" \"}\n              <span className=\"text-sm text-rose-200\">(Threshold: {errorPercentageThreshold.toFixed(2)}%)</span>\n            </h2>\n            {loading ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <svg\n                  className=\"animate-spin h-8 w-8 text-rose-500 mb-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n                <span className=\"text-rose-300\">Loading threshold data...</span>\n              </div>\n            ) : (\n              <div className=\"max-h-96 overflow-y-auto rounded-lg border border-rose-800/30\">\n                <table className=\"min-w-full divide-y divide-rose-800/30\">\n                  <thead className=\"bg-rose-900/20\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-300 uppercase tracking-wider\">\n                        ID\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-300 uppercase tracking-wider\">\n                        True Value\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-300 uppercase tracking-wider\">\n                        Predicted Value\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-300 uppercase tracking-wider\">\n                        % Error\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-rose-900/10 divide-y divide-rose-800/30\">\n                    {outletsExceedingThreshold\n                      .slice()\n                      .sort((a, b) => b.percentage_error - a.percentage_error)\n                      .map((outlet) => (\n                        <tr key={outlet.id} className=\"hover:bg-rose-900/20 transition-colors duration-150\">\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{outlet.id}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                            {outlet.y_true.toFixed(2)}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                            {outlet.y_pred.toFixed(2)}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-rose-400 font-medium\">\n                            {outlet.percentage_error.toFixed(2)}%\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Error Range Distribution Bar Chart */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            ID Distribution by Error Percentage Range\n          </h2>\n          <div className=\"h-80 bg-gray-800/60 rounded-lg p-4 border border-gray-700/50 mb-4\">\n            {loading ? (\n              <div className=\"flex items-center justify-center h-full\">\n                <svg\n                  className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n                <span className=\"text-sky-300\">Loading chart data...</span>\n              </div>\n            ) : (\n              <canvas id=\"errorRangeChart\" width={800} height={320}></canvas>\n            )}\n          </div>\n\n          {/* Selected Range Data Table */}\n          {selectedRange && (\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl font-medium text-sky-300 mb-3\">\n                IDs in {selectedRange} Error Range\n                <button\n                  onClick={() => setSelectedRange(null)}\n                  className=\"ml-2 text-sky-400 hover:text-sky-300\"\n                  aria-label=\"Close details\"\n                >\n                  <X className=\"h-4 w-4 inline\" />\n                </button>\n              </h3>\n              {selectedRangeOutlets.length === 0 ? (\n                <p className=\"text-gray-400\">No IDs in this range</p>\n              ) : (\n                <div className=\"max-h-96 overflow-y-auto rounded-lg border border-sky-800/30\">\n                  <table className=\"min-w-full divide-y divide-sky-800/30\">\n                    <thead className=\"bg-sky-900/20\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                          ID\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                          True Value\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                          Predicted Value\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                          % Error\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-sky-900/10 divide-y divide-sky-800/30\">\n                      {selectedRangeOutlets.map((outlet: AllOutlets) => (\n                        <tr key={outlet.id} className=\"hover:bg-sky-900/20 transition-colors duration-150\">\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{outlet.id}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                            {outlet.y_true.toFixed(2)}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                            {outlet.y_pred.toFixed(2)}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sky-400 font-medium\">\n                            {outlet.percentage_error.toFixed(2)}%\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* XAI Result Section */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            XAI Result\n          </h2>\n          <div className=\"bg-gray-800/60 rounded-lg p-6 border border-gray-700/50\">\n            {loading ? (\n              <div className=\"flex items-center justify-center py-8\">\n                <div className=\"flex flex-col items-center\">\n                  <svg\n                    className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    />\n                  </svg>\n                  <span className=\"text-sky-300\">Loading XAI explanation...</span>\n                </div>\n              </div>\n            ) : (\n              <div className=\"prose prose-invert prose-sky max-w-none\">\n                {xaiExplanation ? (\n                  <ReactMarkdown>{xaiExplanation}</ReactMarkdown>\n                ) : (\n                  <div className=\"flex items-center text-rose-400 gap-2\">\n                    <AlertCircle className=\"h-5 w-5\" />\n                    <p>No explanation available</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n      {/* Tooltip Popup */}\n      {activeTooltip && <TooltipPopup type={activeTooltip} onClose={() => setActiveTooltip(null)} />}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}