{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = require(\"next/dist/compiled/react\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          },\n      specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        Error(\"react-stack-top-frame\"),\n        createTask(getTaskName(type))\n      );\n    };\n  })();\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/node_modules/next/dist/compiled/react/jsx-dev-runtime.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-dev-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-dev-runtime.development.js');\n}\n"],"names":[],"mappings":"AAEI;AAFJ;AAEA,uCAA2C;;AAE3C,OAAO;IACL,OAAO,OAAO;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/node_modules/chart.js/dist/chunks/helpers.segment.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3021, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}