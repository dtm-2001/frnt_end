{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode2/DriftWarningChart.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\ninterface PlotDataPoint {\n  x: number;\n  y: number;\n  exceedsThreshold: boolean;\n}\n\ninterface DriftWarningChartProps {\n  plotData: PlotDataPoint[];\n}\n\nexport default function DriftWarningChart({ plotData }: DriftWarningChartProps): React.ReactElement {\n  const chartRef = useRef<Chart | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    console.log('DriftWarningChart plotData length:', plotData.length);\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    if (!ctx) return;\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n\n    chartRef.current = new Chart(ctx, {\n      type: 'scatter',\n      data: {\n        datasets: [\n          {\n            label: 'Drift State',\n            data: plotData.map((item) => ({ x: item.x, y: item.y })),\n            borderColor: 'rgb(75, 192, 192)',\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            pointBackgroundColor: plotData.map((item) => {\n              if (item.y === 0) return 'rgba(54, 162, 235, 0.8)'; // normal - blue\n              if (item.y === 1) return 'rgba(255, 206, 86, 0.8)'; // warning - yellow\n              if (item.y === 2) return 'rgba(255, 99, 132, 0.8)'; // drift - red\n              return 'rgba(201, 203, 207, 0.8)'; // default grey\n            }),\n            borderWidth: 2,\n            showLine: true,\n            tension: 0.1,\n            fill: false,\n            stepped: false,\n            pointRadius: 5,\n            pointHoverRadius: 7,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            labels: {\n              color: '#e5e7eb',\n            },\n          },\n          tooltip: {\n            mode: 'nearest',\n            intersect: true,\n            callbacks: {\n              label: function(context) {\n                const y = context.parsed.y;\n                if (y === 0) return 'Normal';\n                if (y === 1) return 'Warning';\n                if (y === 2) return 'Drift';\n                return 'Unknown';\n              }\n            }\n          },\n        },\n        scales: {\n          x: {\n            type: 'linear',\n            title: {\n              display: true,\n              text: 'Index',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            ticks: {\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Drift State',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            beginAtZero: true,\n            ticks: {\n              stepSize: 1,\n              callback: function (this: any, tickValue: string | number) {\n                const value = typeof tickValue === 'string' ? parseInt(tickValue) : tickValue;\n                if (value === 0) return 'Normal';\n                if (value === 1) return 'Warning';\n                if (value === 2) return 'Drift';\n                return '';\n              },\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            min: 0,\n            max: 2,\n          },\n        },\n        animation: {\n          duration: 1000,\n          easing: 'easeInOutQuad',\n        },\n        elements: {\n          point: {\n            radius: 5,\n            hoverRadius: 7,\n          },\n        },\n      },\n    });\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n        chartRef.current = null;\n      }\n    };\n  }, [plotData]);\n\n  return <canvas ref={canvasRef} style={{ width: '100%', height: '416px' }} />;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService1.ts"],"sourcesContent":["// services/backendService1.ts\n\nexport interface KPI {\n  rowKey: string\n  value: string\n  status?: string\n}\n\nexport interface PlotDataPoint {\n  x: number\n  y: number\n  value?: number\n  exceedsThreshold: boolean\n}\n\nexport interface TableDataPoint {\n  id: string\n  timePeriod: string\n  meanPrediction?: number\n  error?: number\n  percentageError?: number\n  status: string\n}\n\nexport interface OutletsExceedingThreshold {\n  id: string\n  y_true: number\n  y_pred: number\n  percentage_error: number\n}\n\nexport interface Indices {\n  normal: number[]\n  warning: number[]\n  drift: number[]\n}\n\n// **NEW**: the top-10 misclassified IDs\nexport interface Top10Id {\n  id: string\n  time_period: string\n  Mean_Prediction_Error: number\n}\n\nexport async function fetchData(): Promise<{\n  kpis: KPI[]\n  errors: { plotData: PlotDataPoint[]; tableData: TableDataPoint[] }\n  top10Ids: Top10Id[]\n  outletsExceedingThreshold: OutletsExceedingThreshold[]\n  indices: Indices\n  state: string\n  coverage: any\n  clusters: any\n  backwardAnalysis: any\n  currentPeriod: string\n  totalOutlets: number\n  outletsExceedingThresholdCount: number\n  xaiExplanation: string\n  error_percentage_threshold: number\n  dashboardData: any\n  all_outlets: any[]\n}> {\n  const res = await fetch('/api/mode2/data', { credentials: 'include' })\n  if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`)\n  const raw = await res.json()\n\n  // Fetch dashboard.json separately\n  const dashResponse = await fetch(`/dashboard.json`)\n  if (!dashResponse.ok) {\n    throw new Error(`HTTP error fetching dashboard.json! Status: ${dashResponse.status}`)\n  }\n  const dashboardData = await dashResponse.json()\n\n  // 1) KPIs (as before)…\n  const driftMetrics = raw.drift_state?.metrics || {}\n  const kpis: KPI[] = [\n    {\n      rowKey: 'Drift Detected',\n      value: raw.drift_state?.drift_detected ? 'Yes' : 'No',\n      status: raw.drift_state?.drift_detected ? 'Alert' : 'Normal',\n    },\n    {\n      rowKey: 'Error Percentage Threshold',\n      value: raw.error_percentage_threshold?.toString() || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'Average Percentage Error (All)',\n      value: raw.average_percentage_error_all?.toFixed(2) || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'Average Percentage Error (Exceeding)',\n      value: raw.average_percentage_error_exceeding?.toFixed(2) || 'N/A',\n      status: 'Alert',\n    },\n    {\n      rowKey: 'kstest',\n      value: driftMetrics.ks_statistic?.toFixed(3) || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'wasserstein',\n      value: driftMetrics.wasserstein_distance?.toFixed(3) || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'mseRef',\n      value: driftMetrics.mean_mse_reference?.toFixed(3) || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'mseCurrent',\n      value: driftMetrics.mean_mse_current?.toFixed(3) || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'status',\n      value: raw.drift_state?.drift_detected ? 'Warning' : 'Normal',\n      status: raw.drift_state?.drift_detected ? 'Warning' : 'Normal',\n    },\n  ]\n\n  // 2) errors.plotData & tableData\n  const idError = raw.id_error || []\n  const errors = {\n    plotData: idError.map((item: any, idx: number) => ({\n      x: idx,\n      y: item.Mean_Prediction_Error || 0,\n      value: item.Mean_Prediction_Error || 0,\n      exceedsThreshold:\n        Math.abs(item.Mean_Prediction_Error) >\n        (raw.error_percentage_threshold || 0),\n    })),\n    tableData: idError.map((item: any) => ({\n      id: item.id?.toString() || '',\n      timePeriod: item.time_period || '',\n      meanPrediction: item.Mean_Prediction_Error || 0,\n      error: item.Mean_Prediction_Error || 0,\n      percentageError: Math.abs(item.Mean_Prediction_Error) || 0,\n      status:\n        Math.abs(item.Mean_Prediction_Error) >\n        (raw.error_percentage_threshold || 0)\n          ? 'Alert'\n          : 'Normal',\n    })),\n  }\n\n  // 3) Top-10 by absolute error\n  const top10Ids: Top10Id[] = [...idError]\n    .sort(\n      (a: any, b: any) =>\n        Math.abs(b.Mean_Prediction_Error) - Math.abs(a.Mean_Prediction_Error)\n    )\n    .slice(0, 10)\n    .map((item: any) => ({\n      id: item.id?.toString() || '',\n      time_period: item.time_period || '',\n      Mean_Prediction_Error: item.Mean_Prediction_Error || 0,\n    }))\n\n  // 4) Outlets\n  const outletsExceedingThreshold: OutletsExceedingThreshold[] =\n    (raw.outlets_exceeding_threshold || []).map((item: any) => ({\n      id: item.id?.toString() || '',\n      y_true: item.y_true || 0,\n      y_pred: item.y_pred || 0,\n      percentage_error: item.percentage_error || 0,\n    }))\n\n  // 5) Build indices from raw.indices or clusters fallback\n  let indices: Indices = raw.indices ?? { normal: [], warning: [], drift: [] }\n  if (!raw.indices) {\n    const w = new Set(raw.clusters?.warning || [])\n    const d = new Set(raw.clusters?.drift || [])\n    const n: number[] = []\n    const widx: number[] = []\n    const didx: number[] = []\n    idError.forEach((item: any, idx: number) => {\n      const idStr = item.id?.toString()\n      if (w.has(idStr)) widx.push(idx)\n      else if (d.has(idStr)) didx.push(idx)\n      else n.push(idx)\n    })\n    indices = { normal: n, warning: widx, drift: didx }\n  }\n\n  // 6) Other fields\n  const state = raw.state || 'Unknown'\n  const coverage = raw.coverage || {}\n  const clusters = raw.clusters || {}\n  const backwardAnalysis = raw.backward_analysis || {}\n  const currentPeriod = raw.current_period || 'N/A'\n  const totalOutlets = raw.total_outlets || 0\n  const outletsExceedingThresholdCount = raw.outlets_exceeding_threshold_count || 0\n  const xaiExplanation = raw.xai?.explanation || 'No explanation available'\n\n  return {\n    kpis,\n    errors,\n    top10Ids,\n    outletsExceedingThreshold,\n    indices,\n    state,\n    coverage,\n    clusters,\n    backwardAnalysis,\n    currentPeriod,\n    totalOutlets,\n    outletsExceedingThresholdCount,\n    xaiExplanation,\n    error_percentage_threshold: raw.error_percentage_threshold || 0,\n    dashboardData,\n    all_outlets: raw.all_outlets || [],\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode2/page.tsx"],"sourcesContent":["\"use client\"\nimport type React from \"react\"\nimport { useState, useEffect, useMemo, useRef, useCallback } from \"react\"\nimport Head from \"next/head\"\nimport ReactMarkdown from \"react-markdown\"\nimport { Chart, registerables } from \"chart.js\"\nimport DriftWarningChart from \"./DriftWarningChart\"\nimport { AlertCircle, AlertTriangle, CheckCircle, RefreshCw, Info, X } from \"lucide-react\"\nimport {\n  fetchData,\n  type KPI,\n  type PlotDataPoint,\n  type TableDataPoint,\n  type OutletsExceedingThreshold,\n  type Indices,\n  type AllOutlets,\n} from \"../../services/backendService1\"\n\nChart.register(...registerables)\n\n// Error percentage ranges for the bar chart\nconst ERROR_RANGES = [\n  { min: 0, max: 10, label: \"0-10%\" },\n  { min: 10, max: 20, label: \"10-20%\" },\n  { min: 20, max: 30, label: \"20-30%\" },\n  { min: 30, max: 40, label: \"30-40%\" },\n  { min: 40, max: 50, label: \"40-50%\" },\n  { min: 50, max: 60, label: \"50-60%\" },\n  { min: 60, max: 70, label: \"60-70%\" },\n  { min: 70, max: 80, label: \"70-80%\" },\n  { min: 80, max: 90, label: \"80-90%\" },\n  { min: 90, max: 100, label: \"90-100%\" },\n  { min: 100, max: Number.POSITIVE_INFINITY, label: \">100%\" },\n]\n\nexport default function Mode2Page(): React.ReactElement {\n  // --- STATE HOOKS ---\n  const [kpis, setKpis] = useState<KPI[]>([])\n  const [errorData, setErrorData] = useState<{ plotData: PlotDataPoint[]; tableData: TableDataPoint[] }>({\n    plotData: [],\n    tableData: [],\n  })\n  const [outletsExceedingThreshold, setOutletsExceedingThreshold] = useState<OutletsExceedingThreshold[]>([])\n  const [indices, setIndices] = useState<Indices>({ normal: [], warning: [], drift: [] })\n  const [currentPeriod, setCurrentPeriod] = useState<string>(\"N/A\")\n  const [outletsExceedingThresholdCount, setOutletsExceedingThresholdCount] = useState<number>(0)\n  const [xaiExplanation, setXaiExplanation] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(true)\n  const [backendError, setBackendError] = useState<string | null>(null)\n  const [errorPercentageThreshold, setErrorPercentageThreshold] = useState<number>(0)\n\n  // --- FILTER STATES for Dashboard ---\n  const [businessUnit, setBusinessUnit] = useState<string>(\"\")\n  const [useCase, setUseCase] = useState<string>(\"\")\n  const [shortCode, setShortCode] = useState<string>(\"\")\n  const [alertKeeperValue, setAlertKeeperValue] = useState<string>(\"\")\n  const [runtimeValue, setRuntimeValue] = useState<number>(1)\n\n  // Status distribution for pie chart\n  const [statusDistribution, setStatusDistribution] = useState({ good: 65, warning: 25, error: 10 })\n\n  // Error range data for bar chart\n  const [allOutlets, setAllOutlets] = useState<AllOutlets[]>([])\n  const [errorRangeData, setErrorRangeData] = useState<{ range: string; count: number; outlets: AllOutlets[] }[]>([])\n  const [selectedRange, setSelectedRange] = useState<string | null>(null)\n  const [selectedRangeOutlets, setSelectedRangeOutlets] = useState<AllOutlets[]>([])\n\n  // Chart refs\n  const pieChartRef = useRef<Chart | null>(null)\n  const errorRangeChartRef = useRef<Chart | null>(null)\n\n  // Memoized chart colors\n  const chartColors = useMemo(() => {\n    return {\n      good: \"rgba(52,211,153,0.8)\",\n      warning: \"rgba(251,191,36,0.8)\",\n      error: \"rgba(239,68,68,0.8)\",\n      goodBorder: \"rgba(52,211,153,1)\",\n      warningBorder: \"rgba(251,191,36,1)\",\n      errorBorder: \"rgba(239,68,68,1)\",\n      barColors: [\n        \"rgba(52,211,153,0.8)\",\n        \"rgba(96,165,250,0.8)\",\n        \"rgba(234,179,8,0.8)\",\n        \"rgba(251,191,36,0.8)\",\n        \"rgba(251,146,60,0.8)\",\n        \"rgba(249,115,22,0.8)\",\n        \"rgba(236,72,153,0.8)\",\n        \"rgba(244,114,182,0.8)\",\n        \"rgba(248,113,113,0.8)\",\n        \"rgba(244,63,94,0.8)\",\n        \"rgba(239,68,68,0.8)\",\n      ],\n    }\n  }, [])\n\n  // Memoized status helpers\n  const getStatusIcon = useCallback((s?: string) => {\n    if (!s) return <Info className=\"h-5 w-5 text-gray-400\" />\n    return s.toLowerCase() === \"warning\" ? (\n      <AlertTriangle className=\"h-5 w-5 text-amber-400\" />\n    ) : s.toLowerCase() === \"error\" ? (\n      <AlertCircle className=\"h-5 w-5 text-rose-500\" />\n    ) : (\n      <CheckCircle className=\"h-5 w-5 text-emerald-400\" />\n    )\n  }, [])\n\n  const getStatusColor = useCallback((s?: string) => {\n    if (!s) return \"text-gray-400\"\n    return s.toLowerCase() === \"warning\"\n      ? \"text-amber-400\"\n      : s.toLowerCase() === \"error\"\n        ? \"text-rose-500\"\n        : \"text-emerald-400\"\n  }, [])\n\n  // Calculate error range data\n  const calculateErrorRangeData = useCallback((outlets: AllOutlets[]) => {\n    if (!outlets?.length) return []\n\n    return ERROR_RANGES.map((r) => {\n      const outs: AllOutlets[] = outlets.filter(\n        (o: AllOutlets) => o.percentage_error >= r.min && o.percentage_error < r.max,\n      )\n      return { range: r.label, count: outs.length, outlets: outs }\n    })\n  }, [])\n\n  // Fetch & prepare all data\n  const initData = useCallback(async (): Promise<void> => {\n    setLoading(true)\n    setBackendError(null)\n    try {\n      const {\n        businessUnit: fBU,\n        useCase: fUC,\n        shortCode: fSC,\n        alertKeeper: fAK,\n        kpis: fetchedKpis,\n        errors: fetchedErrors,\n        outletsExceedingThreshold: fetchedOutlets,\n        indices: fetchedIndices,\n        currentPeriod: fetchedPeriod,\n        outletsExceedingThresholdCount: fetchedCount,\n        xaiExplanation: fetchedXai,\n        error_percentage_threshold,\n        all_outlets: fetchedAllOutlets,\n      } = await fetchData()\n\n      // Static filters\n      setBusinessUnit(fBU || \"\")\n      setUseCase(fUC || \"\")\n      setShortCode(fSC || \"\")\n      setAlertKeeperValue(fAK || \"\")\n\n      // Build the \"drift & warning over time\" plotData from indices\n      const driftPlot: PlotDataPoint[] = []\n      fetchedIndices.normal.forEach((x) => driftPlot.push({ x, y: 0, exceedsThreshold: false }))\n      fetchedIndices.warning.forEach((x) => driftPlot.push({ x, y: 1, exceedsThreshold: false }))\n      fetchedIndices.drift.forEach((x) => driftPlot.push({ x, y: 2, exceedsThreshold: false }))\n      driftPlot.sort((a, b) => a.x - b.x)\n\n      // Dynamic data\n      setKpis(\n        fetchedKpis.filter((k) =>\n          [\"kstest\", \"wasserstein\", \"mseref\", \"msecurrent\"].includes(k.rowKey.toLowerCase()) ? false : true,\n        ),\n      )\n      setErrorData({ plotData: driftPlot, tableData: fetchedErrors.tableData })\n      setOutletsExceedingThreshold(fetchedOutlets)\n      setIndices(fetchedIndices)\n      setCurrentPeriod(fetchedPeriod)\n      setOutletsExceedingThresholdCount(fetchedCount)\n      setXaiExplanation(fetchedXai)\n      setErrorPercentageThreshold(error_percentage_threshold ?? 0)\n      setAllOutlets(fetchedAllOutlets || [])\n\n      // Status distribution\n      const normalCount = fetchedIndices.normal.length\n      const warningCount = fetchedIndices.warning.length\n      const driftCount = fetchedIndices.drift.length\n      const total = normalCount + warningCount + driftCount || 1\n      setStatusDistribution({\n        good: Math.round((normalCount / total) * 100),\n        warning: Math.round((warningCount / total) * 100),\n        error: Math.round((driftCount / total) * 100),\n      })\n\n      // Error‐range bar chart data\n      if (fetchedAllOutlets?.length) {\n        setErrorRangeData(calculateErrorRangeData(fetchedAllOutlets))\n      }\n    } catch (err) {\n      console.error(err)\n      setBackendError(err instanceof Error ? err.message : \"Unknown error\")\n    } finally {\n      setLoading(false)\n    }\n  }, [calculateErrorRangeData])\n\n  // Initial data load\n  useEffect(() => {\n    initData()\n\n    // Cleanup function to destroy charts when component unmounts\n    return () => {\n      if (pieChartRef.current) {\n        pieChartRef.current.destroy()\n      }\n      if (errorRangeChartRef.current) {\n        errorRangeChartRef.current.destroy()\n      }\n    }\n  }, [initData])\n\n  // Re-draw charts any time data changes\n  useEffect(() => {\n    if (!loading) {\n      renderPieChart()\n      renderErrorRangeChart()\n    }\n  }, [loading, statusDistribution, errorRangeData, chartColors])\n\n  // Pie chart\n  const renderPieChart = useCallback(() => {\n    const ctx = document.getElementById(\"statusPieChart\") as HTMLCanvasElement\n    if (!ctx) return\n\n    // Properly destroy existing chart to prevent memory leaks\n    if (pieChartRef.current) {\n      pieChartRef.current.destroy()\n    }\n\n    // Memoize chart data\n    const chartData = {\n      labels: [\"Good\", \"Warning\", \"Error\"],\n      datasets: [\n        {\n          data: [statusDistribution.good, statusDistribution.warning, statusDistribution.error],\n          backgroundColor: [chartColors.good, chartColors.warning, chartColors.error],\n          borderColor: [chartColors.goodBorder, chartColors.warningBorder, chartColors.errorBorder],\n          borderWidth: 1,\n        },\n      ],\n    }\n\n    pieChartRef.current = new Chart(ctx, {\n      type: \"pie\",\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: \"right\",\n            labels: {\n              color: \"#e5e7eb\",\n              font: { size: 14 },\n              generateLabels: (chart) =>\n                chart.data.labels!.map((l, i) => ({\n                  text: `${l}: ${chart.data.datasets![0].data[i]}%`,\n                  fillStyle: chart.data.datasets![0].backgroundColor![i] as string,\n                  strokeStyle: chart.data.datasets![0].borderColor![i] as string,\n                  lineWidth: 1,\n                  hidden: false,\n                  index: i,\n                })),\n            },\n          },\n          tooltip: {\n            callbacks: {\n              label: (ctx) => `${ctx.label}: ${ctx.raw}%`,\n            },\n          },\n        },\n      },\n    })\n  }, [statusDistribution, chartColors])\n\n  // Bar chart\n  const renderErrorRangeChart = useCallback(() => {\n    const ctx = document.getElementById(\"errorRangeChart\") as HTMLCanvasElement\n    if (!ctx) return\n\n    // Properly destroy existing chart to prevent memory leaks\n    if (errorRangeChartRef.current) {\n      errorRangeChartRef.current.destroy()\n    }\n\n    // Get colors based on data length\n    const colors = chartColors.barColors.slice(0, errorRangeData.length)\n    const borders = colors.map((c) => c.replace(/0\\.8/, \"1\"))\n\n    // Memoize chart data\n    const chartData = {\n      labels: errorRangeData.map((d) => d.range),\n      datasets: [\n        {\n          label: \"Number of IDs\",\n          data: errorRangeData.map((d) => d.count),\n          backgroundColor: colors,\n          borderColor: borders,\n          borderWidth: 1,\n          borderRadius: 4,\n        },\n      ],\n    }\n\n    errorRangeChartRef.current = new Chart(ctx, {\n      type: \"bar\",\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          title: {\n            display: true,\n            text: \"ID Distribution by Error Percentage Range\",\n            color: \"#38bdf8\",\n            font: { size: 16, weight: \"bold\" },\n          },\n          tooltip: {\n            callbacks: {\n              label: (ctx) => `IDs: ${ctx.raw}`,\n              afterLabel: () => \"Click to view details\",\n            },\n            backgroundColor: \"rgba(15,23,42,0.8)\",\n            titleColor: \"#38bdf8\",\n            bodyColor: \"#e5e7eb\",\n            borderColor: \"#1e40af\",\n            borderWidth: 1,\n            padding: 10,\n          },\n          legend: { display: false },\n        },\n        scales: {\n          x: {\n            title: { display: true, text: \"Error Percentage Range\", color: \"#38bdf8\", font: { weight: \"bold\" } },\n            ticks: { color: \"#e5e7eb\", font: { size: 12 } },\n            grid: { color: \"rgba(148,163,184,0.1)\", borderColor: \"rgba(148,163,184,0.2)\" },\n          },\n          y: {\n            title: { display: true, text: \"Number of IDs\", color: \"#38bdf8\", font: { weight: \"bold\" } },\n            beginAtZero: true,\n            ticks: { color: \"#e5e7eb\", precision: 0 },\n            grid: { color: \"rgba(148,163,184,0.1)\", borderColor: \"rgba(148,163,184,0.2)\" },\n          },\n        },\n        onClick: (_evt, elems) => {\n          if (elems.length) handleBarClick(elems[0].index)\n        },\n      },\n    })\n  }, [errorRangeData, chartColors])\n\n  // Bar‐click handler\n  const handleBarClick = useCallback(\n    (i: number) => {\n      const sel = errorRangeData[i]\n      setSelectedRange(sel.range)\n      setSelectedRangeOutlets(sel.outlets.sort((a, b) => b.percentage_error - a.percentage_error))\n    },\n    [errorRangeData],\n  )\n\n  // Memoize sorted table data\n  const sortedErrorTableData = useMemo(() => {\n    return errorData.tableData.slice().sort((a, b) => (a.error ?? 0) - (b.error ?? 0))\n  }, [errorData.tableData])\n\n  // Memoize sorted threshold exceedance data\n  const sortedOutletsExceedingThreshold = useMemo(() => {\n    return outletsExceedingThreshold.slice().sort((a, b) => b.percentage_error - a.percentage_error)\n  }, [outletsExceedingThreshold])\n\n  // Memoize status KPI\n  const statusKpi = useMemo(() => {\n    return kpis.find((k) => k.rowKey === \"status\")?.value\n  }, [kpis])\n\n  // Memoize additional metrics\n  const additionalMetrics = useMemo(() => {\n    return {\n      avgPercentageError: kpis.find((k) => k.rowKey === \"avgPercentageError\")?.value || \"N/A\",\n      avgPercentageErrorExceeding: kpis.find((k) => k.rowKey === \"avgPercentageErrorExceeding\")?.value || \"N/A\",\n    }\n  }, [kpis])\n\n  return (\n    <div className=\"bg-gradient-to-b from-gray-950 to-gray-900 min-h-screen flex flex-col\">\n      <Head>\n        <title>Mode 2 | Business Dashboard</title>\n      </Head>\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        {/* Backend Error */}\n        {backendError && (\n          <div className=\"bg-rose-950/40 border border-rose-800/60 rounded-lg p-4 mb-6 backdrop-blur-sm shadow-lg\">\n            <div className=\"flex items-center\">\n              <AlertCircle className=\"h-5 w-5 text-rose-400 mr-2\" />\n              <h3 className=\"text-lg font-medium text-rose-300\">Backend Error</h3>\n            </div>\n            <p className=\"mt-2 text-rose-200\">{backendError}</p>\n            <button\n              onClick={initData}\n              className=\"mt-3 px-4 py-2 bg-rose-800/50 hover:bg-rose-700/70 text-white rounded-md text-sm flex items-center gap-2\"\n            >\n              <RefreshCw className=\"h-4 w-4\" /> Retry\n            </button>\n          </div>\n        )}\n\n        {/* Header */}\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\">\n          <h2 className=\"text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-2\">\n            OCTAVE – RG Dashboard\n          </h2>\n          <p className=\"text-sky-300 flex items-center gap-2\">\n            <span className=\"inline-block h-2 w-2 rounded-full bg-sky-400 animate-pulse\" />\n            Current Period: {loading ? \"Loading…\" : currentPeriod}\n          </p>\n        </div>\n\n        {/* Static Filters & Runtime */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6\">\n          {/* Filters (2/3) */}\n          <div className=\"lg:col-span-2 bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded-lg border border-sky-800/30 shadow-md\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <p className=\"text-lg font-medium text-sky-300\">Business Unit:</p>\n                <p className=\"text-sky-200\">{loading ? \"Loading…\" : businessUnit || \"Not Selected\"}</p>\n                <p className=\"mt-4 text-lg font-medium text-sky-300\">Use Case:</p>\n                <p className=\"text-sky-200\">{loading ? \"Loading…\" : useCase || \"Not Selected\"}</p>\n              </div>\n              <div>\n                <p className=\"text-lg font-medium text-sky-300\">Short Code:</p>\n                <p className=\"text-sky-200\">{loading ? \"Loading…\" : shortCode || \"Not Available\"}</p>\n                <p className=\"mt-4 text-lg font-medium text-sky-300\">Alert Keeper:</p>\n                <p className=\"text-sky-200\">{loading ? \"Loading…\" : alertKeeperValue || \"Not Selected\"}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Runtime (1/3) */}\n          <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded-lg border border-sky-800/30 shadow-md\">\n            <h3 className=\"text-lg font-medium text-sky-300 mb-2\">Runtime</h3>\n            <select\n              className=\"w-full bg-gray-800/80 border border-sky-700/50 rounded-md p-2 text-white focus:ring-2 focus:ring-sky-500\"\n              value={runtimeValue}\n              onChange={(e) => setRuntimeValue(Number(e.target.value))}\n            >\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={3}>3</option>\n              <option value={4}>4</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Plot & Pie */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6\">\n          {/* Drift & Warning Over Time */}\n          <div className=\"lg:col-span-2 bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 border border-gray-700/50 backdrop-blur-sm\">\n            <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n              Drift & Warning Over Time\n            </h2>\n            <div className=\"h-80 bg-gray-800/60 rounded-lg p-4 border border-gray-700/50\">\n              {loading ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <svg\n                    className=\"animate-spin h-8 w-8 text-sky-500\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    />\n                  </svg>\n                </div>\n              ) : (\n                <DriftWarningChart plotData={errorData.plotData} />\n              )}\n            </div>\n          </div>\n\n          {/* Status Distribution */}\n          <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded-lg border border-sky-800/30 shadow-md\">\n            <h3 className=\"text-lg font-medium text-sky-300 mb-2\">Status Distribution</h3>\n            <div className=\"h-80\">\n              <canvas id=\"statusPieChart\"></canvas>\n            </div>\n          </div>\n        </div>\n\n        {/* KPIs */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Key Performance Indicators\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {/* Status */}\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md hover:shadow-sky-900/20 hover:border-sky-700/50 transition-all\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2\">Status</h3>\n              <div className=\"flex items-center\">\n                <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                  {getStatusIcon(statusKpi)}\n                </div>\n                <p className={`text-xl font-semibold ${getStatusColor(statusKpi)}`}>\n                  {loading ? \"Loading...\" : statusKpi || \"N/A\"}\n                </p>\n              </div>\n            </div>\n            {/* Additional Metrics */}\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md hover:shadow-sky-900/20 hover:border-sky-700/50 transition-all\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2\">Additional Metrics</h3>\n              <div className=\"space-y-4\">\n                <div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-400\">Drift Detected:</span>\n                    <span className=\"text-sm font-medium text-white\">\n                      {loading ? \"Loading...\" : outletsExceedingThresholdCount === 0 ? \"No\" : \"Yes\"}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"pt-3 border-t border-sky-800/30\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-400\">Error % Threshold:</span>\n                    <span className=\"text-sm font-medium text-white\">\n                      {loading ? \"Loading...\" : errorPercentageThreshold.toFixed(2)}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"pt-3 border-t border-sky-800/30\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-400\">Avg % Error (All):</span>\n                    <span className=\"text-sm font-medium text-white\">\n                      {loading ? \"Loading...\" : additionalMetrics.avgPercentageError}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"pt-3 border-t border-sky-800/30\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-400\">Avg % Error (Exceed):</span>\n                    <span className=\"text-sm font-medium text-white\">\n                      {loading ? \"Loading...\" : additionalMetrics.avgPercentageErrorExceeding}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Error Comparison & Threshold Exceedances */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          {/* Error Comparison */}\n          <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 border border-gray-700/50 backdrop-blur-sm\">\n            <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n              Error Comparison\n            </h2>\n            {loading ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <svg\n                  className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n                <span className=\"text-sky-300\">Loading error data...</span>\n              </div>\n            ) : (\n              <div className=\"max-h-96 overflow-y-auto rounded-lg border border-gray-700/50\">\n                <table className=\"min-w-full divide-y divide-gray-700/50\">\n                  <thead className=\"bg-gray-800/60\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                        NO.\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                        ID\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-400 uppercase tracking-wider\">\n                        Error\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-gray-800/30 divide-y divide-gray-700/50\">\n                    {sortedErrorTableData.map((row, i) => (\n                      <tr key={row.id} className=\"hover:bg-gray-700/30 transition-colors duration-150\">\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{i + 1}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{row.id}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-rose-400 font-medium\">\n                          {(row.error ?? 0).toFixed(2)}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n\n          {/* Threshold Exceedances */}\n          <div className=\"bg-gradient-to-br from-rose-950/30 to-gray-900/90 rounded-xl shadow-xl overflow-hidden p-6 border border-rose-900/30 backdrop-blur-sm\">\n            <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-rose-400 to-rose-600 mb-4\">\n              Threshold Exceedances&nbsp;\n              <span className=\"text-sm text-rose-200\">(Threshold: {errorPercentageThreshold.toFixed(2)}%)</span>\n            </h2>\n            {loading ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <svg\n                  className=\"animate-spin h-8 w-8 text-rose-500 mb-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.137 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n                <span className=\"text-rose-300\">Loading threshold data...</span>\n              </div>\n            ) : (\n              <div className=\"max-h-96 overflow-y-auto rounded-lg border border-rose-800/30\">\n                <table className=\"min-w-full divide-y divide-rose-800/30\">\n                  <thead className=\"bg-rose-900/20\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-300 uppercase tracking-wider\">\n                        ID\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-300 uppercase tracking-wider\">\n                        True Value\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-300 uppercase tracking-wider\">\n                        Predicted Value\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-rose-300 uppercase tracking-wider\">\n                        % Error\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-rose-900/10 divide-y divide-rose-800/30\">\n                    {sortedOutletsExceedingThreshold.map((outlet) => (\n                      <tr key={outlet.id} className=\"hover:bg-rose-900/20 transition-colors duration-150\">\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{outlet.id}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                          {outlet.y_true.toFixed(2)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                          {outlet.y_pred.toFixed(2)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-rose-400 font-medium\">\n                          {outlet.percentage_error.toFixed(2)}%\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Error Range Distribution Bar Chart */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            ID Distribution by Error Percentage Range\n          </h2>\n          <div className=\"h-80 bg-gray-800/60 rounded-lg p-4 border border-gray-700/50 mb-4\">\n            {loading ? (\n              <div className=\"flex items-center justify-center h-full\">\n                <svg\n                  className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n                <span className=\"text-sky-300\">Loading chart data...</span>\n              </div>\n            ) : (\n              <canvas id=\"errorRangeChart\"></canvas>\n            )}\n          </div>\n\n          {/* Selected Range Table */}\n          {selectedRange && (\n            <div className=\"mt-4\">\n              <h3 className=\"text-xl font-medium text-sky-300 mb-3\">\n                IDs in {selectedRange} Error Range\n                <button onClick={() => setSelectedRange(null)} className=\"ml-2 text-sky-400 hover:text-sky-300\">\n                  <X className=\"h-4 w-4 inline\" />\n                </button>\n              </h3>\n              {selectedRangeOutlets.length === 0 ? (\n                <p className=\"text-gray-400\">No IDs in this range</p>\n              ) : (\n                <div className=\"max-h-96 overflow-y-auto rounded-lg border border-sky-800/30\">\n                  <table className=\"min-w-full divide-y divide-sky-800/30\">\n                    <thead className=\"bg-sky-900/20\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                          ID\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                          True Value\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                          Predicted Value\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                          % Error\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-sky-900/10 divide-y divide-sky-800/30\">\n                      {selectedRangeOutlets.map((o) => (\n                        <tr key={o.id} className=\"hover:bg-sky-900/20 transition-colors duration-150\">\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{o.id}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">{o.y_true.toFixed(2)}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">{o.y_pred.toFixed(2)}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-sky-400 font-medium\">\n                            {o.percentage_error.toFixed(2)}%\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* XAI Result */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            XAI Result\n          </h2>\n          <div className=\"bg-gray-800/60 rounded-lg p-6 border border-gray-700/50\">\n            {loading ? (\n              <div className=\"flex items-center justify-center py-8\">\n                <svg\n                  className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n                <span className=\"text-sky-300\">Loading XAI explanation...</span>\n              </div>\n            ) : (\n              <div className=\"prose prose-invert prose-sky max-w-none\">\n                {xaiExplanation ? (\n                  <ReactMarkdown>{xaiExplanation}</ReactMarkdown>\n                ) : (\n                  <div className=\"flex items-center text-rose-400 gap-2\">\n                    <AlertCircle className=\"h-5 w-5\" />\n                    <p>No explanation available</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}