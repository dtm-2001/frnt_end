{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/components/D3ConfusionMatrix.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport interface D3ConfusionMatrixProps {\r\n  data: number[][];\r\n  labels: string[];\r\n  title?: string;\r\n  width: number;   // the “inner” width (cells only)\r\n  height: number;  // the “inner” height (cells only)\r\n}\r\n\r\nconst D3ConfusionMatrix: React.FC<D3ConfusionMatrixProps> = ({\r\n  data,\r\n  labels,\r\n  title,\r\n  width,\r\n  height,\r\n}) => {\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!data.length || !svgRef.current) return;\r\n\r\n    // --- margins around the matrix, in pixels\r\n    const margin = { top: title ? 30 : 10, right: 10, bottom: 10, left: 10 };\r\n\r\n    // total SVG coordinate size\r\n    const totalWidth = width + margin.left + margin.right;\r\n    const totalHeight = height + margin.top + margin.bottom;\r\n\r\n    // scales for cells\r\n    const xScale = d3\r\n      .scaleBand<string>()\r\n      .domain(labels)\r\n      .range([0, width])\r\n      .padding(0.05);\r\n\r\n    const yScale = d3\r\n      .scaleBand<string>()\r\n      .domain(labels)\r\n      .range([0, height])\r\n      .padding(0.05);\r\n\r\n    // color ramp\r\n    const maxVal = d3.max(data.flat()) ?? 1;\r\n    const colorScale = d3.scaleSequential(d3.interpolateBlues).domain([0, maxVal]);\r\n\r\n    // set up the SVG\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll(\"*\").remove();\r\n    svg.attr(\"viewBox\", `0 0 ${totalWidth} ${totalHeight}`);\r\n\r\n    // optional title\r\n    if (title) {\r\n      svg\r\n        .append(\"text\")\r\n        .attr(\"x\", totalWidth / 2)\r\n        .attr(\"y\", margin.top / 2)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .style(\"fill\", \"white\")\r\n        .style(\"font-size\", \"14px\")\r\n        .text(title);\r\n    }\r\n\r\n    // container for everything, offset by margin\r\n    const g = svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    // draw cells + numbers\r\n    data.forEach((row, i) => {\r\n      row.forEach((val, j) => {\r\n        // raw positions in the inner 0..width / 0..height\r\n        const rx = xScale(labels[j])!;\r\n        const ry = yScale(labels[i])!;\r\n        const rw = xScale.bandwidth();\r\n        const rh = yScale.bandwidth();\r\n\r\n        // round to integers so that both rect and text align perfectly\r\n        const x = Math.round(rx);\r\n        const y = Math.round(ry);\r\n        const w = Math.round(rw);\r\n        const h = Math.round(rh);\r\n\r\n        // background rect\r\n        g.append(\"rect\")\r\n          .attr(\"x\", x)\r\n          .attr(\"y\", y)\r\n          .attr(\"width\", w)\r\n          .attr(\"height\", h)\r\n          .attr(\"fill\", colorScale(val))\r\n          .attr(\"stroke\", \"#334155\")\r\n          .attr(\"stroke-width\", 0.5);\r\n\r\n        // centered text\r\n        g.append(\"text\")\r\n          .attr(\"x\", x + w / 2)\r\n          .attr(\"y\", y + h / 2)\r\n          .attr(\"text-anchor\", \"middle\")\r\n          .attr(\"dominant-baseline\", \"middle\")\r\n          .style(\"font-size\", `${Math.floor(Math.min(w, h) * 0.4)}px`)\r\n          .attr(\"fill\", val > maxVal / 2 ? \"white\" : \"black\")\r\n          .text(val);\r\n      });\r\n    });\r\n\r\n    // X axis (top)\r\n    g.append(\"g\")\r\n      .attr(\"transform\", `translate(0,0)`)\r\n      .call(d3.axisTop(xScale).tickSize(0))\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", \"10px\")\r\n      .attr(\"dy\", \"-0.3em\");\r\n\r\n    // Y axis (left)\r\n    g.append(\"g\")\r\n      .attr(\"transform\", `translate(0,0)`)\r\n      .call(d3.axisLeft(yScale).tickSize(0))\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", \"10px\")\r\n      .attr(\"dx\", \"-0.3em\");\r\n\r\n    // remove domain lines\r\n    g.selectAll(\".domain\").remove();\r\n\r\n    // axis labels\r\n    g.append(\"text\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", -margin.top / 2)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .style(\"fill\", \"#94a3b8\")\r\n      .style(\"font-size\", \"12px\")\r\n      .text(\"Predicted\");\r\n\r\n    g.append(\"text\")\r\n      .attr(\"transform\", `translate(${-margin.left / 2},${height / 2}) rotate(-90)`)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .style(\"fill\", \"#94a3b8\")\r\n      .style(\"font-size\", \"12px\")\r\n      .text(\"Actual\");\r\n  }, [data, labels, title, width, height]);\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default D3ConfusionMatrix;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService2.ts"],"sourcesContent":["// services/backendService2.ts\n\nexport interface KPI {\n  rowKey: string;\n  value: string;\n  status?: string;\n}\n\nexport interface PlotDataPoint {\n  x: number;\n  y: number;\n  value?: number;\n  exceedsThreshold: boolean;\n}\n\nexport interface TableDataPoint {\n  id: string;\n  timePeriod: string;\n  status: string;\n}\n\nexport interface OutletsExceedingThreshold {\n  id: string;\n  y_true: number;\n  y_pred: number;\n  percentage_error: number;\n}\n\nexport interface DetailedMetric {\n  total_samples: number;\n  correct_predictions: { count: number; percentage: number; };\n  incorrect_predictions: { count: number; percentage: number; };\n  misclassifications: Record<string, { count: number; percentage: number; }>;\n}\n\nexport async function fetchData(): Promise<{\n  kpis: KPI[];\n  errors: { plotData: PlotDataPoint[]; tableData: TableDataPoint[] };\n  referenceMatrix: number[][];\n  currentMatrix: number[][];\n  outletsExceedingThreshold: OutletsExceedingThreshold[];\n  detailedMetrics: Record<string, DetailedMetric>;\n  state: string;\n  coverage: any;\n  clusters: any;\n  backwardAnalysis: any;\n  currentPeriod: string;\n  totalOutlets: number;\n  outletsExceedingThresholdCount: number;\n  xaiExplanation: string;\n}> {\n  try {\n    console.log(\"Fetching data from backend via relative URL: /mode3/data\");\n    const response = await fetch(`/mode3/data`, { credentials: 'include' });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const rawData = await response.json();\n    console.log(\"Parsed data:\", rawData);\n\n    // 1) Build KPIs\n    const kpis: KPI[] = [\n      {\n        rowKey: \"Drift Detected\",\n        value: rawData.drift_state?.drift_detected ? \"Yes\" : \"No\",\n        status: rawData.drift_state?.drift_detected ? \"Alert\" : \"Normal\",\n      },\n      {\n        rowKey: \"Jensen–Shannon Divergence\",\n        value: rawData.drift_state?.jensen_shannon_divergence\n          ? rawData.drift_state.jensen_shannon_divergence.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Population Stability Index\",\n        value: rawData.drift_state?.population_stability_index\n          ? rawData.drift_state.population_stability_index.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Precision (Reference)\",\n        value: rawData.metrics?.reference?.precision\n          ? rawData.metrics.reference.precision.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Precision (Current)\",\n        value: rawData.metrics?.current?.precision\n          ? rawData.metrics.current.precision.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Recall (Reference)\",\n        value: rawData.metrics?.reference?.recall\n          ? rawData.metrics.reference.recall.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Recall (Current)\",\n        value: rawData.metrics?.current?.recall\n          ? rawData.metrics.current.recall.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"F1 Score (Reference)\",\n        value: rawData.metrics?.reference?.f1_score\n          ? rawData.metrics.reference.f1_score.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"F1 Score (Current)\",\n        value: rawData.metrics?.current?.f1_score\n          ? rawData.metrics.current.f1_score.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Accuracy\",\n        value: rawData.overall_metrics?.accuracy != null\n          ? rawData.overall_metrics.accuracy.toFixed(2)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Error Rate\",\n        value: rawData.overall_metrics?.error_rate != null\n          ? rawData.overall_metrics.error_rate.toFixed(2)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Status\",\n        value: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n        status: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n      },\n    ];\n\n    // 2) Pull both reference & current confusion-matrices\n    const referenceMatrix: number[][] =\n      rawData.confusion_matrices?.reference ??\n      rawData.confusion_matrix?.normalized ??\n      rawData.confusion_matrix?.raw ??\n      [];\n    const currentMatrix: number[][] =\n      rawData.confusion_matrices?.current ??\n      rawData.confusion_matrix?.normalized ??\n      rawData.confusion_matrix?.raw ??\n      [];\n\n    // 3) Flatten referenceMatrix into plotData\n    const plotData: PlotDataPoint[] = [];\n    referenceMatrix.forEach((row, y) =>\n      row.forEach((val, x) =>\n        plotData.push({ x, y, value: val, exceedsThreshold: false })\n      )\n    );\n\n    // 4) Table of misclassified cases\n    const tableData: TableDataPoint[] = (rawData.misclassified_table || []).map(\n      (item: any) => ({\n        id: item.id,\n        timePeriod: `True ${item.True} → Pred ${item.Predicted}`,\n        status: \"Misclassified\",\n      })\n    );\n\n    // 5) Outlets (we no longer need them—but still return for backward compatibility)\n    const outletsExceedingThreshold = (rawData.outlets_exceeding_threshold || []).map(\n      (item: any) => ({\n        id: item.id?.toString() || \"\",\n        y_true: item.y_true || 0,\n        y_pred: item.y_pred || 0,\n        percentage_error: item.percentage_error || 0,\n      })\n    );\n\n    // 6) Detailed metrics\n    const detailedMetrics: Record<string, DetailedMetric> =\n      rawData.detailed_metrics || {};\n\n    // 7) Other fields\n    return {\n      kpis,\n      errors: { plotData, tableData },\n      referenceMatrix,\n      currentMatrix,\n      outletsExceedingThreshold,\n      detailedMetrics,\n      state: rawData.state || \"Unknown\",\n      coverage: rawData.coverage || {},\n      clusters: rawData.clusters || {},\n      backwardAnalysis: rawData.backward_analysis || {},\n      currentPeriod: rawData.current_period || \"N/A\",\n      totalOutlets: rawData.total_outlets || 0,\n      outletsExceedingThresholdCount:\n        rawData.outlets_exceeding_threshold_count || 0,\n      xaiExplanation: rawData.explanation || \"No explanation available\",\n    };\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    throw new Error(\"Failed to fetch and process data\");\n  }\n}\n"],"names":[],"mappings":"AAAA,8BAA8B;;;;AAmCvB,eAAe;IAgBpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,MAAM,MAAM,CAAC,WAAW,CAAC,EAAE;YAAE,aAAa;QAAU;QACrE,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QAEA,MAAM,UAAU,MAAM,SAAS,IAAI;QACnC,QAAQ,GAAG,CAAC,gBAAgB;QAE5B,gBAAgB;QAChB,MAAM,OAAc;YAClB;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,iBAAiB,QAAQ;gBACrD,QAAQ,QAAQ,WAAW,EAAE,iBAAiB,UAAU;YAC1D;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,4BACxB,QAAQ,WAAW,CAAC,yBAAyB,CAAC,OAAO,CAAC,KACtD;gBACJ,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,6BACxB,QAAQ,WAAW,CAAC,0BAA0B,CAAC,OAAO,CAAC,KACvD;gBACJ,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,WAAW,YAC/B,QAAQ,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,KAC5C;gBACJ,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,SAAS,YAC7B,QAAQ,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,KAC1C;gBACJ,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,WAAW,SAC/B,QAAQ,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,KACzC;gBACJ,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,SAAS,SAC7B,QAAQ,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KACvC;gBACJ,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,WAAW,WAC/B,QAAQ,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,KAC3C;gBACJ,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,SAAS,WAC7B,QAAQ,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,KACzC;gBACJ,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,eAAe,EAAE,YAAY,OACxC,QAAQ,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,KACzC;gBACJ,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,eAAe,EAAE,cAAc,OAC1C,QAAQ,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,KAC3C;gBACJ,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,iBAAiB,YAAY;gBACzD,QAAQ,QAAQ,WAAW,EAAE,iBAAiB,YAAY;YAC5D;SACD;QAED,sDAAsD;QACtD,MAAM,kBACJ,QAAQ,kBAAkB,EAAE,aAC5B,QAAQ,gBAAgB,EAAE,cAC1B,QAAQ,gBAAgB,EAAE,OAC1B,EAAE;QACJ,MAAM,gBACJ,QAAQ,kBAAkB,EAAE,WAC5B,QAAQ,gBAAgB,EAAE,cAC1B,QAAQ,gBAAgB,EAAE,OAC1B,EAAE;QAEJ,2CAA2C;QAC3C,MAAM,WAA4B,EAAE;QACpC,gBAAgB,OAAO,CAAC,CAAC,KAAK,IAC5B,IAAI,OAAO,CAAC,CAAC,KAAK,IAChB,SAAS,IAAI,CAAC;oBAAE;oBAAG;oBAAG,OAAO;oBAAK,kBAAkB;gBAAM;QAI9D,kCAAkC;QAClC,MAAM,YAA8B,CAAC,QAAQ,mBAAmB,IAAI,EAAE,EAAE,GAAG,CACzE,CAAC,OAAc,CAAC;gBACd,IAAI,KAAK,EAAE;gBACX,YAAY,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE,KAAK,SAAS,EAAE;gBACxD,QAAQ;YACV,CAAC;QAGH,kFAAkF;QAClF,MAAM,4BAA4B,CAAC,QAAQ,2BAA2B,IAAI,EAAE,EAAE,GAAG,CAC/E,CAAC,OAAc,CAAC;gBACd,IAAI,KAAK,EAAE,EAAE,cAAc;gBAC3B,QAAQ,KAAK,MAAM,IAAI;gBACvB,QAAQ,KAAK,MAAM,IAAI;gBACvB,kBAAkB,KAAK,gBAAgB,IAAI;YAC7C,CAAC;QAGH,sBAAsB;QACtB,MAAM,kBACJ,QAAQ,gBAAgB,IAAI,CAAC;QAE/B,kBAAkB;QAClB,OAAO;YACL;YACA,QAAQ;gBAAE;gBAAU;YAAU;YAC9B;YACA;YACA;YACA;YACA,OAAO,QAAQ,KAAK,IAAI;YACxB,UAAU,QAAQ,QAAQ,IAAI,CAAC;YAC/B,UAAU,QAAQ,QAAQ,IAAI,CAAC;YAC/B,kBAAkB,QAAQ,iBAAiB,IAAI,CAAC;YAChD,eAAe,QAAQ,cAAc,IAAI;YACzC,cAAc,QAAQ,aAAa,IAAI;YACvC,gCACE,QAAQ,iCAAiC,IAAI;YAC/C,gBAAgB,QAAQ,WAAW,IAAI;QACzC;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode3/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport D3ConfusionMatrix from \"../../components/D3ConfusionMatrix\";\nimport { AlertCircle, AlertTriangle, CheckCircle, RefreshCw, Info } from \"lucide-react\";\nimport { Chart, registerables } from \"chart.js\";\nimport {\n  fetchData,\n  type KPI,\n  type PlotDataPoint,\n  type TableDataPoint,\n} from \"../../services/backendService2\";\nimport ReactMarkdown from \"react-markdown\";\n\nChart.register(...registerables);\n\ninterface DetailedMetric {\n  total_samples: number;\n  correct_predictions: { count: number; percentage: number };\n  incorrect_predictions: { count: number; percentage: number };\n  misclassifications: Record<string, { count: number; percentage: number }>;\n}\n\nexport default function Mode3Page() {\n  // --- FILTER STATES ---\n  const [businessUnit, setBusinessUnit] = useState<string>(\"\");\n  const [useCase, setUseCase] = useState<string>(\"\");\n  const [shortCode, setShortCode] = useState<string>(\"\");\n  const [alertKeeperValue, setAlertKeeperValue] = useState<string>(\"\");\n  const [runtimeValue, setRuntimeValue] = useState<number>(1);\n\n  // --- CORE DATA STATES ---\n  const [kpis, setKpis] = useState<KPI[]>([]);\n  const [errors, setErrors] = useState<{ plotData: PlotDataPoint[]; tableData: TableDataPoint[] }>({\n    plotData: [],\n    tableData: [],\n  });\n  const [referenceMatrix, setReferenceMatrix] = useState<number[][]>([]);\n  const [currentMatrix, setCurrentMatrix] = useState<number[][]>([]);\n  const [detailedMetrics, setDetailedMetrics] = useState<Record<string, DetailedMetric>>({});\n  const [xaiExplanation, setXaiExplanation] = useState<string>(\"No explanation available\");\n  const [backendError, setBackendError] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  // --- CLASS ACCURACY STATE ---\n  const [selectedClass, setSelectedClass] = useState<string>(\"\");\n\n  // --- HELPERS ---\n  const makeLabels = (n: number) => Array.from({ length: n }, (_, i) => i.toString());\n  const computeSquareSize = (grid: number[][]) => {\n    const maxPx = 300;\n    const rows = grid.length, cols = grid[0]?.length || 0;\n    if (!rows || !cols) return maxPx;\n    const cellSize = Math.min(maxPx / rows, maxPx / cols);\n    return Math.max(rows, cols) * cellSize;\n  };\n  const getStatusIcon = (s?: string) => {\n    if (!s) return <Info className=\"h-5 w-5 text-gray-400\" />;\n    switch (s.toLowerCase()) {\n      case \"warning\": return <AlertTriangle className=\"h-5 w-5 text-amber-400\" />;\n      case \"error\":   return <AlertCircle   className=\"h-5 w-5 text-rose-500\" />;\n      case \"success\": return <CheckCircle    className=\"h-5 w-5 text-emerald-400\" />;\n      default:        return <Info           className=\"h-5 w-5 text-sky-400\" />;\n    }\n  };\n  const getStatusColor = (s?: string) => {\n    if (!s) return \"text-gray-400\";\n    switch (s.toLowerCase()) {\n      case \"warning\": return \"text-amber-400\";\n      case \"error\":   return \"text-rose-500\";\n      case \"success\": return \"text-emerald-400\";\n      default:        return \"text-sky-400\";\n    }\n  };\n\n  // --- FETCH DATA ---\n  const initData = async () => {\n    setLoading(true);\n    setBackendError(null);\n    try {\n      const {\n        kpis: fetchedKpis,\n        errors: fetchedErrors,\n        referenceMatrix: fetchedRefM,\n        currentMatrix: fetchedCurrM,\n        detailedMetrics: fetchedDetailed,\n        xaiExplanation: fetchedXai,\n      } = await fetchData();\n\n      setKpis(fetchedKpis);\n      setErrors(fetchedErrors);\n      setReferenceMatrix(fetchedRefM);\n      setCurrentMatrix(fetchedCurrM);\n      setDetailedMetrics(fetchedDetailed);\n      setXaiExplanation(fetchedXai);\n\n      const classes = Object.keys(fetchedDetailed);\n      if (classes.length) setSelectedClass(classes[0]);\n    } catch (err) {\n      console.error(err);\n      setBackendError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => { initData(); }, []);\n\n  // --- CHART RENDERING WITH DESTROY LOGIC ---\n  useEffect(() => {\n    if (loading) return;\n\n    // Full status distribution\n    const pieCanvas = document.getElementById(\"statusPieChart\") as HTMLCanvasElement;\n    if (pieCanvas) {\n      const existing = Chart.getChart(pieCanvas);\n      if (existing) existing.destroy();\n      new Chart(pieCanvas, {\n        type: \"pie\",\n        data: {\n          labels: [\"Good\", \"Warning\", \"Error\"],\n          datasets: [{\n            data: [\n              kpis.filter(k => k.status === \"success\").length,\n              kpis.filter(k => k.status === \"warning\").length,\n              kpis.filter(k => k.status === \"error\").length,\n            ],\n            backgroundColor: [\n              \"rgba(52, 211, 153, 0.8)\",\n              \"rgba(251, 191, 36, 0.8)\",\n              \"rgba(239,  68, 68, 0.8)\",\n            ],\n            borderColor: [\n              \"rgba(52, 211, 153, 1)\",\n              \"rgba(251, 191, 36, 1)\",\n              \"rgba(239,  68, 68, 1)\",\n            ],\n            borderWidth: 1,\n          }],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: \"right\",\n              labels: {\n                color: \"#e5e7eb\",\n                font: { size: 14 },\n                generateLabels: chart =>\n                  chart.data.labels!.map((label, i) => ({\n                    text: `${label}: ${chart.data.datasets![0].data[i]} pts`,\n                    fillStyle: chart.data.datasets![0].backgroundColor![i] as string,\n                    strokeStyle: chart.data.datasets![0].borderColor![i] as string,\n                    lineWidth: 1,\n                    hidden: false,\n                    index: i,\n                  })),\n              },\n            },\n            tooltip: {\n              callbacks: {\n                label: ctx => `${ctx.label}: ${ctx.raw}`,\n              },\n            },\n          },\n        },\n      });\n    }\n\n    // Per-class Correct vs Incorrect\n    const classCanvas = document.getElementById(\"classAccuracyChart\") as HTMLCanvasElement;\n    if (classCanvas && selectedClass) {\n      const existing2 = Chart.getChart(classCanvas);\n      if (existing2) existing2.destroy();\n\n      const dm = detailedMetrics[selectedClass];\n      new Chart(classCanvas, {\n        type: \"pie\",\n        data: {\n          labels: [\"Correct\", \"Incorrect\"],\n          datasets: [{\n            data: [dm.correct_predictions.count, dm.incorrect_predictions.count],\n            backgroundColor: [\"rgba(52,211,153,0.8)\", \"rgba(239,68,68,0.8)\"],\n            borderColor:   [\"rgba(52,211,153,1)\",   \"rgba(239,68,68,1)\"],\n            borderWidth: 1,\n          }],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: \"right\",\n              labels: {\n                color: \"#e5e7eb\",\n                font: { size: 14 },\n                generateLabels: chart =>\n                  chart.data.labels!.map((label, i) => ({\n                    text: `${label}: ${chart.data.datasets![0].data[i]}`,\n                    fillStyle: chart.data.datasets![0].backgroundColor![i] as string,\n                    strokeStyle: chart.data.datasets![0].borderColor![i] as string,\n                    lineWidth: 1,\n                    hidden: false,\n                    index: i,\n                  })),\n              },\n            },\n          },\n        },\n      });\n    }\n  }, [loading, selectedClass, detailedMetrics, kpis]);\n\n  return (\n    <div className=\"bg-gradient-to-b from-gray-950 to-gray-900 min-h-screen\">\n      <Head><title>Mode 3 | CL Dashboard</title></Head>\n      <main className=\"container mx-auto px-4 py-8\">\n        {/* Backend Error */}\n        {backendError && (\n          <div className=\"bg-rose-950/40 border border-rose-800/60 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center\">\n              <AlertCircle className=\"h-5 w-5 text-rose-400 mr-2\" />\n              <p className=\"text-rose-300 font-medium\">{backendError}</p>\n            </div>\n            <button\n              onClick={initData}\n              className=\"mt-2 inline-flex items-center gap-2 px-4 py-2 bg-rose-800/50 text-white rounded text-sm\"\n            >\n              <RefreshCw className=\"h-4 w-4\" /> Retry\n            </button>\n          </div>\n        )}\n\n        {/* Header & Refresh */}\n        <div className=\"flex flex-col md:flex-row justify-between mb-6\">\n          <h1 className=\"text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600\">\n            OCTAVE – CL Dashboard\n          </h1>\n          <button\n            onClick={initData}\n            className=\"mt-4 md:mt-0 inline-flex items-center gap-2 px-4 py-2 bg-sky-800/40 text-white rounded\"\n          >\n            <RefreshCw className=\"h-4 w-4\" /> Refresh\n          </button>\n        </div>\n\n        {/* Top Filters & Runtime */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 mb-6\">\n          <div className=\"lg:col-span-2 bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded border border-sky-800/30\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <p className=\"text-sm text-sky-300\">Business Unit:</p>\n                <p className=\"text-lg text-white\">{loading ? \"Loading…\" : businessUnit || \"N/A\"}</p>\n                <p className=\"mt-4 text-sm text-sky-300\">Use Case:</p>\n                <p className=\"text-lg text-white\">{loading ? \"Loading…\" : useCase || \"N/A\"}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-sky-300\">Short Code:</p>\n                <p className=\"text-lg text-white\">{loading ? \"Loading…\" : shortCode || \"N/A\"}</p>\n                <p className=\"mt-4 text-sm text-sky-300\">Alert Keeper:</p>\n                <p className=\"text-lg text-white\">{loading ? \"Loading…\" : alertKeeperValue || \"N/A\"}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded border border-sky-800/30\">\n            <p className=\"text-sm text-sky-300\">Runtime</p>\n            <select\n              className=\"mt-1 w-full bg-gray-800/80 border border-sky-700/50 rounded p-2 text-white\"\n              value={runtimeValue}\n              onChange={e => setRuntimeValue(Number(e.target.value))}\n            >\n              {[1,2,3,4].map(n => <option key={n} value={n}>{n}</option>)}\n            </select>\n          </div>\n        </div>\n\n        {/* Confusion Matrices */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6\">\n          {[\n            { title: \"Reference Matrix\", grid: referenceMatrix },\n            { title: \"Current Matrix\",   grid: currentMatrix   },\n          ].map(({ title, grid }, idx) => {\n            const side = computeSquareSize(grid);\n            return (\n              <div key={idx} className=\"bg-gray-900/80 p-6 rounded border border-gray-700/50 text-center\">\n                <h2 className=\"text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n                  {title}\n                </h2>\n                {!loading && grid.length ? (\n                  <div style={{ width: side + 40, height: side + 40 }} className=\"mx-auto\">\n                    <D3ConfusionMatrix data={grid} labels={makeLabels(grid[0].length)} width={side} height={side} />\n                  </div>\n                ) : (\n                  <div className=\"flex justify-center items-center h-48\">\n                    <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n                  </div>\n                )}\n              </div>\n            );\n          })}\n\n          {/* Per-Class Accuracy */}\n          <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded border border-sky-800/30\">\n            <p className=\"text-sm text-sky-300 mb-2\">Select Class:</p>\n            <select\n              className=\"w-full bg-gray-800/80 border border-sky-700/50 rounded p-2 mb-4 text-white\"\n              value={selectedClass}\n              onChange={e => setSelectedClass(e.target.value)}\n            >\n              {Object.keys(detailedMetrics).map(cls => (\n                <option key={cls} value={cls}>{cls}</option>\n              ))}\n            </select>\n            <div className=\"h-48\">\n              <canvas id=\"classAccuracyChart\"></canvas>\n            </div>\n          </div>\n        </div>\n\n        {/* Detailed Metrics Table */}\n        <div className=\"bg-gray-900/80 p-6 rounded border border-gray-700/50 mb-6 overflow-x-auto\">\n          <h2 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Detailed Metrics by Class\n          </h2>\n          {loading ? (\n            <div className=\"flex justify-center py-12\">\n              <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n            </div>\n          ) : (\n            <table className=\"min-w-full divide-y divide-gray-700/50\">\n              <thead className=\"bg-gray-800/60\">\n                <tr>\n                  <th className=\"px-4 py-2 text-sky-300 text-left\">Class</th>\n                  <th className=\"px-4 py-2 text-sky-300 text-left\">Total</th>\n                  <th className=\"px-4 py-2 text-sky-300 text-left\">Correct</th>\n                  <th className=\"px-4 py-2 text-sky-300 text-left\">Incorrect</th>\n                  <th className=\"px-4 py-2 text-sky-300 text-left\">Misclassifications</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-gray-800/30 divide-y divide-gray-700/50\">\n                {Object.entries(detailedMetrics).map(([cls, dm]) => (\n                  <tr key={cls} className=\"hover:bg-gray-700/30\">\n                    <td className=\"px-4 py-2 text-white\">{cls}</td>\n                    <td className=\"px-4 py-2\">{dm.total_samples}</td>\n                    <td className=\"px-4 py-2 text-emerald-400\">\n                      {dm.correct_predictions.count} ({dm.correct_predictions.percentage.toFixed(1)}%)\n                    </td>\n                    <td className=\"px-4 py-2 text-rose-400\">\n                      {dm.incorrect_predictions.count} ({dm.incorrect_predictions.percentage.toFixed(1)}%)\n                    </td>\n                    <td className=\"px-4 py-2 text-gray-300\">\n                      {Object.entries(dm.misclassifications)\n                        .map(([p, m]) => `${p}: ${m.count} (${m.percentage.toFixed(1)}%)`)\n                        .join(\", \")}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n\n        {/* KPI Section */}\n        <div className=\"bg-gray-900/80 p-6 rounded border border-gray-700/50 mb-6\">\n          <h2 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Key Performance Indicators\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n            {kpis.map(kpi => (\n              <div key={kpi.rowKey} className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded border border-sky-800/30\">\n                <p className=\"text-sky-300\">{kpi.rowKey}</p>\n                <div className=\"flex items-center mt-2\">\n                  <div className=\"w-8 h-8 flex items-center justify-center mr-2\">\n                    {getStatusIcon(kpi.status)}\n                  </div>\n                  <p className={`text-xl font-semibold ${getStatusColor(kpi.status)}`}>\n                    {loading ? \"…\" : kpi.value}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* XAI Result */}\n        <div className=\"bg-gray-900/80 p-6 rounded border border-gray-700/50 mb-6\">\n          <h2 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            XAI Result\n          </h2>\n          {loading ? (\n            <div className=\"flex justify-center py-8\">\n              <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n            </div>\n          ) : (\n            <div className=\"prose prose-invert prose-sky\">\n              <ReactMarkdown>{xaiExplanation}</ReactMarkdown>\n            </div>\n          )}\n        </div>\n\n        {/* Misclassified Table */}\n        <div className=\"bg-gray-900/80 p-6 rounded border border-gray-700/50 max-h-96 overflow-y-auto\">\n          <h2 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Misclassified Table\n          </h2>\n          {loading ? (\n            <div className=\"flex justify-center py-12\">\n              <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n            </div>\n          ) : (\n            <table className=\"min-w-full divide-y divide-gray-700/50\">\n              <thead className=\"bg-gray-800/60\">\n                <tr>\n                  <th className=\"px-4 py-2 text-sky-300 text-left\">ID</th>\n                  <th className=\"px-4 py-2 text-sky-300 text-left\">True → Pred</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-gray-800/30 divide-y divide-gray-700/50\">\n                {errors.tableData.length ? (\n                  errors.tableData.map((r, i) => (\n                    <tr key={i} className=\"hover:bg-rose-900/20\">\n                      <td className=\"px-4 py-2 text-white\">{r.id}</td>\n                      <td className=\"px-4 py-2 text-rose-300\">{r.timePeriod}</td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan={2} className=\"px-4 py-2 text-gray-400 text-center\">\n                      No misclassified data\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}