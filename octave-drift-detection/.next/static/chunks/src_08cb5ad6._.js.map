{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/components/D3ConfusionMatrix.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport interface D3ConfusionMatrixProps {\r\n  data: number[][];\r\n  labels: string[];\r\n  title?: string;\r\n  width: number;   // the “inner” width (cells only)\r\n  height: number;  // the “inner” height (cells only)\r\n}\r\n\r\nconst D3ConfusionMatrix: React.FC<D3ConfusionMatrixProps> = ({\r\n  data,\r\n  labels,\r\n  title,\r\n  width,\r\n  height,\r\n}) => {\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!data.length || !svgRef.current) return;\r\n\r\n    // --- margins around the matrix, in pixels\r\n    const margin = { top: title ? 30 : 10, right: 10, bottom: 10, left: 10 };\r\n\r\n    // total SVG coordinate size\r\n    const totalWidth = width + margin.left + margin.right;\r\n    const totalHeight = height + margin.top + margin.bottom;\r\n\r\n    // scales for cells\r\n    const xScale = d3\r\n      .scaleBand<string>()\r\n      .domain(labels)\r\n      .range([0, width])\r\n      .padding(0.05);\r\n\r\n    const yScale = d3\r\n      .scaleBand<string>()\r\n      .domain(labels)\r\n      .range([0, height])\r\n      .padding(0.05);\r\n\r\n    // color ramp\r\n    const maxVal = d3.max(data.flat()) ?? 1;\r\n    const colorScale = d3.scaleSequential(d3.interpolateBlues).domain([0, maxVal]);\r\n\r\n    // set up the SVG\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll(\"*\").remove();\r\n    svg.attr(\"viewBox\", `0 0 ${totalWidth} ${totalHeight}`);\r\n\r\n    // optional title\r\n    if (title) {\r\n      svg\r\n        .append(\"text\")\r\n        .attr(\"x\", totalWidth / 2)\r\n        .attr(\"y\", margin.top / 2)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .style(\"fill\", \"white\")\r\n        .style(\"font-size\", \"14px\")\r\n        .text(title);\r\n    }\r\n\r\n    // container for everything, offset by margin\r\n    const g = svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    // draw cells + numbers\r\n    data.forEach((row, i) => {\r\n      row.forEach((val, j) => {\r\n        // raw positions in the inner 0..width / 0..height\r\n        const rx = xScale(labels[j])!;\r\n        const ry = yScale(labels[i])!;\r\n        const rw = xScale.bandwidth();\r\n        const rh = yScale.bandwidth();\r\n\r\n        // round to integers so that both rect and text align perfectly\r\n        const x = Math.round(rx);\r\n        const y = Math.round(ry);\r\n        const w = Math.round(rw);\r\n        const h = Math.round(rh);\r\n\r\n        // background rect\r\n        g.append(\"rect\")\r\n          .attr(\"x\", x)\r\n          .attr(\"y\", y)\r\n          .attr(\"width\", w)\r\n          .attr(\"height\", h)\r\n          .attr(\"fill\", colorScale(val))\r\n          .attr(\"stroke\", \"#334155\")\r\n          .attr(\"stroke-width\", 0.5);\r\n\r\n        // centered text\r\n        g.append(\"text\")\r\n          .attr(\"x\", x + w / 2)\r\n          .attr(\"y\", y + h / 2)\r\n          .attr(\"text-anchor\", \"middle\")\r\n          .attr(\"dominant-baseline\", \"middle\")\r\n          .style(\"font-size\", `${Math.floor(Math.min(w, h) * 0.4)}px`)\r\n          .attr(\"fill\", val > maxVal / 2 ? \"white\" : \"black\")\r\n          .text(val);\r\n      });\r\n    });\r\n\r\n    // X axis (top)\r\n    g.append(\"g\")\r\n      .attr(\"transform\", `translate(0,0)`)\r\n      .call(d3.axisTop(xScale).tickSize(0))\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", \"10px\")\r\n      .attr(\"dy\", \"-0.3em\");\r\n\r\n    // Y axis (left)\r\n    g.append(\"g\")\r\n      .attr(\"transform\", `translate(0,0)`)\r\n      .call(d3.axisLeft(yScale).tickSize(0))\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", \"10px\")\r\n      .attr(\"dx\", \"-0.3em\");\r\n\r\n    // remove domain lines\r\n    g.selectAll(\".domain\").remove();\r\n\r\n    // axis labels\r\n    g.append(\"text\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", -margin.top / 2)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .style(\"fill\", \"#94a3b8\")\r\n      .style(\"font-size\", \"12px\")\r\n      .text(\"Predicted\");\r\n\r\n    g.append(\"text\")\r\n      .attr(\"transform\", `translate(${-margin.left / 2},${height / 2}) rotate(-90)`)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .style(\"fill\", \"#94a3b8\")\r\n      .style(\"font-size\", \"12px\")\r\n      .text(\"Actual\");\r\n  }, [data, labels, title, width, height]);\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default D3ConfusionMatrix;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode2/DriftWarningChart.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\ninterface PlotDataPoint {\n  x: number;\n  y: number;\n  exceedsThreshold: boolean;\n}\n\ninterface DriftWarningChartProps {\n  plotData: PlotDataPoint[];\n}\n\nexport default function DriftWarningChart({ plotData }: DriftWarningChartProps): React.ReactElement {\n  const chartRef = useRef<Chart | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    console.log('DriftWarningChart plotData length:', plotData.length);\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    if (!ctx) return;\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n\n    chartRef.current = new Chart(ctx, {\n      type: 'scatter',\n      data: {\n        datasets: [\n          {\n            label: 'Drift State',\n            data: plotData.map((item) => ({ x: item.x, y: item.y })),\n            borderColor: 'rgb(75, 192, 192)',\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            pointBackgroundColor: plotData.map((item) => {\n              if (item.y === 0) return 'rgba(54, 162, 235, 0.8)'; // normal - blue\n              if (item.y === 1) return 'rgba(255, 206, 86, 0.8)'; // warning - yellow\n              if (item.y === 2) return 'rgba(255, 99, 132, 0.8)'; // drift - red\n              return 'rgba(201, 203, 207, 0.8)'; // default grey\n            }),\n            borderWidth: 2,\n            showLine: true,\n            tension: 0.1,\n            fill: false,\n            stepped: false,\n            pointRadius: 5,\n            pointHoverRadius: 7,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            labels: {\n              color: '#e5e7eb',\n            },\n          },\n          tooltip: {\n            mode: 'nearest',\n            intersect: true,\n            callbacks: {\n              label: function(context) {\n                const y = context.parsed.y;\n                if (y === 0) return 'Normal';\n                if (y === 1) return 'Warning';\n                if (y === 2) return 'Drift';\n                return 'Unknown';\n              }\n            }\n          },\n        },\n        scales: {\n          x: {\n            type: 'linear',\n            title: {\n              display: true,\n              text: 'Index',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            ticks: {\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Drift State',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            beginAtZero: true,\n            ticks: {\n              stepSize: 1,\n              callback: function (this: any, tickValue: string | number) {\n                const value = typeof tickValue === 'string' ? parseInt(tickValue) : tickValue;\n                if (value === 0) return 'Normal';\n                if (value === 1) return 'Warning';\n                if (value === 2) return 'Drift';\n                return '';\n              },\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            min: 0,\n            max: 2,\n          },\n        },\n        animation: {\n          duration: 1000,\n          easing: 'easeInOutQuad',\n        },\n        elements: {\n          point: {\n            radius: 5,\n            hoverRadius: 7,\n          },\n        },\n      },\n    });\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n        chartRef.current = null;\n      }\n    };\n  }, [plotData]);\n\n  return <canvas ref={canvasRef} style={{ width: '100%', height: '416px' }} />;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;;;AAFA;;;AAGA,gKAAA,CAAA,QAAK,CAAC,QAAQ,IAAI,gKAAA,CAAA,gBAAa;AAYhB,SAAS,kBAAkB,EAAE,QAAQ,EAA0B;;IAC5E,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAgB;IACtC,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAA4B;IAEnD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,QAAQ,GAAG,CAAC,sCAAsC,SAAS,MAAM;YACjE,IAAI,CAAC,UAAU,OAAO,EAAE;YACxB,MAAM,MAAM,UAAU,OAAO,CAAC,UAAU,CAAC;YACzC,IAAI,CAAC,KAAK;YAEV,IAAI,SAAS,OAAO,EAAE;gBACpB,SAAS,OAAO,CAAC,OAAO;YAC1B;YAEA,SAAS,OAAO,GAAG,IAAI,gKAAA,CAAA,QAAK,CAAC,KAAK;gBAChC,MAAM;gBACN,MAAM;oBACJ,UAAU;wBACR;4BACE,OAAO;4BACP,MAAM,SAAS,GAAG;+DAAC,CAAC,OAAS,CAAC;wCAAE,GAAG,KAAK,CAAC;wCAAE,GAAG,KAAK,CAAC;oCAAC,CAAC;;4BACtD,aAAa;4BACb,iBAAiB;4BACjB,sBAAsB,SAAS,GAAG;+DAAC,CAAC;oCAClC,IAAI,KAAK,CAAC,KAAK,GAAG,OAAO,2BAA2B,gBAAgB;oCACpE,IAAI,KAAK,CAAC,KAAK,GAAG,OAAO,2BAA2B,mBAAmB;oCACvE,IAAI,KAAK,CAAC,KAAK,GAAG,OAAO,2BAA2B,cAAc;oCAClE,OAAO,4BAA4B,eAAe;gCACpD;;4BACA,aAAa;4BACb,UAAU;4BACV,SAAS;4BACT,MAAM;4BACN,SAAS;4BACT,aAAa;4BACb,kBAAkB;wBACpB;qBACD;gBACH;gBACA,SAAS;oBACP,YAAY;oBACZ,qBAAqB;oBACrB,SAAS;wBACP,QAAQ;4BACN,QAAQ;gCACN,OAAO;4BACT;wBACF;wBACA,SAAS;4BACP,MAAM;4BACN,WAAW;4BACX,WAAW;gCACT,KAAK;mEAAE,SAAS,OAAO;wCACrB,MAAM,IAAI,QAAQ,MAAM,CAAC,CAAC;wCAC1B,IAAI,MAAM,GAAG,OAAO;wCACpB,IAAI,MAAM,GAAG,OAAO;wCACpB,IAAI,MAAM,GAAG,OAAO;wCACpB,OAAO;oCACT;;4BACF;wBACF;oBACF;oBACA,QAAQ;wBACN,GAAG;4BACD,MAAM;4BACN,OAAO;gCACL,SAAS;gCACT,MAAM;gCACN,OAAO;gCACP,MAAM;oCACJ,QAAQ;gCACV;4BACF;4BACA,MAAM;gCACJ,OAAO;4BACT;4BACA,OAAO;gCACL,OAAO;gCACP,MAAM;oCACJ,MAAM;gCACR;4BACF;wBACF;wBACA,GAAG;4BACD,OAAO;gCACL,SAAS;gCACT,MAAM;gCACN,OAAO;gCACP,MAAM;oCACJ,QAAQ;gCACV;4BACF;4BACA,aAAa;4BACb,OAAO;gCACL,UAAU;gCACV,QAAQ;mEAAE,SAAqB,SAA0B;wCACvD,MAAM,QAAQ,OAAO,cAAc,WAAW,SAAS,aAAa;wCACpE,IAAI,UAAU,GAAG,OAAO;wCACxB,IAAI,UAAU,GAAG,OAAO;wCACxB,IAAI,UAAU,GAAG,OAAO;wCACxB,OAAO;oCACT;;gCACA,OAAO;gCACP,MAAM;oCACJ,MAAM;gCACR;4BACF;4BACA,MAAM;gCACJ,OAAO;4BACT;4BACA,KAAK;4BACL,KAAK;wBACP;oBACF;oBACA,WAAW;wBACT,UAAU;wBACV,QAAQ;oBACV;oBACA,UAAU;wBACR,OAAO;4BACL,QAAQ;4BACR,aAAa;wBACf;oBACF;gBACF;YACF;YAEA;+CAAO;oBACL,IAAI,SAAS,OAAO,EAAE;wBACpB,SAAS,OAAO,CAAC,OAAO;wBACxB,SAAS,OAAO,GAAG;oBACrB;gBACF;;QACF;sCAAG;QAAC;KAAS;IAEb,qBAAO,6LAAC;QAAO,KAAK;QAAW,OAAO;YAAE,OAAO;YAAQ,QAAQ;QAAQ;;;;;;AACzE;GAxIwB;KAAA","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService3.ts"],"sourcesContent":["// services/backendService3.ts\n\nexport interface KPI {\n    rowKey: string;\n    value: string;\n    status?: string;\n  }\n  \n  export interface PlotDataPoint {\n    x: number;\n    y: number;\n    exceedsThreshold: boolean;\n    // `value` isn’t needed here, but you can add `value?: number` if you like\n  }\n  \n  export interface TableDataPoint {\n    id: string;\n    timePeriod: string;\n    status: string;\n  }\n  \n  export interface OutletsExceedingThreshold {\n    id: string;\n    y_true: number;\n    y_pred: number;\n    percentage_error: number;\n  }\n  \n  export interface DetailedMetric {\n    total_samples: number;\n    correct_predictions: { count: number; percentage: number };\n    incorrect_predictions: { count: number; percentage: number };\n    misclassifications: Record<string, { count: number; percentage: number }>;\n  }\n  \n  export async function fetchData(): Promise<{\n    kpis: KPI[];\n    errors: { plotData: PlotDataPoint[]; tableData: TableDataPoint[] };\n    referenceMatrix: number[][];\n    currentMatrix: number[][];\n    outletsExceedingThreshold: OutletsExceedingThreshold[];\n    detailedMetrics: Record<string, DetailedMetric>;\n    state: string;\n    coverage: any;\n    clusters: any;\n    backwardAnalysis: any;\n    currentPeriod: string;\n    totalOutlets: number;\n    outletsExceedingThresholdCount: number;\n    xaiExplanation: string;\n  }> {\n    try {\n      console.log(\"Fetching data from backend via relative URL: /mode4/data\");\n      const response = await fetch(`/mode4/data`, { credentials: \"include\" });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const rawData = await response.json();\n      console.log(\"Parsed data:\", rawData);\n  \n      // 1) Build KPIs\n      const kpis: KPI[] = [\n        {\n          rowKey: \"Drift Detected\",\n          value: rawData.drift_state?.drift_detected ? \"Yes\" : \"No\",\n          status: rawData.drift_state?.drift_detected ? \"Alert\" : \"Normal\",\n        },\n        {\n          rowKey: \"Jensen–Shannon Divergence\",\n          value: rawData.drift_state?.jensen_shannon_divergence != null\n            ? rawData.drift_state.jensen_shannon_divergence.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Population Stability Index\",\n          value: rawData.drift_state?.population_stability_index != null\n            ? rawData.drift_state.population_stability_index.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Precision (Reference)\",\n          value: rawData.metrics?.reference?.precision != null\n            ? rawData.metrics.reference.precision.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Precision (Current)\",\n          value: rawData.metrics?.current?.precision != null\n            ? rawData.metrics.current.precision.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Recall (Reference)\",\n          value: rawData.metrics?.reference?.recall != null\n            ? rawData.metrics.reference.recall.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Recall (Current)\",\n          value: rawData.metrics?.current?.recall != null\n            ? rawData.metrics.current.recall.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"F1 Score (Reference)\",\n          value: rawData.metrics?.reference?.f1_score != null\n            ? rawData.metrics.reference.f1_score.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"F1 Score (Current)\",\n          value: rawData.metrics?.current?.f1_score != null\n            ? rawData.metrics.current.f1_score.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Accuracy\",\n          value: rawData.overall_metrics?.accuracy != null\n            ? rawData.overall_metrics.accuracy.toFixed(2)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Error Rate\",\n          value: rawData.overall_metrics?.error_rate != null\n            ? rawData.overall_metrics.error_rate.toFixed(2)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Status\",\n          value: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n          status: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n        },\n      ];\n  \n      // 2) Confusion matrices: raw → reference, normalized → current\n      const referenceMatrix: number[][] = rawData.confusion_matrix?.raw ?? [];\n      const currentMatrix: number[][] = rawData.confusion_matrix?.normalized ?? [];\n  \n      // 3) Build the drift/warning plot from indices\n      const plotData: PlotDataPoint[] = [];\n      const idx = rawData.indices ?? { normal: [], warning: [], drift: [] };\n      idx.normal.forEach((x: number) =>\n        plotData.push({ x, y: 0, exceedsThreshold: false })\n      );\n      idx.warning.forEach((x: number) =>\n        plotData.push({ x, y: 1, exceedsThreshold: false })\n      );\n      idx.drift.forEach((x: number) =>\n        plotData.push({ x, y: 2, exceedsThreshold: false })\n      );\n      plotData.sort((a, b) => a.x - b.x);\n  \n      // 4) Misclassified table\n      const tableData: TableDataPoint[] = (rawData.misclassified_table || []).map(\n        (item: any) => ({\n          id: item.id,\n          timePeriod: `True ${item.True} → Pred ${item.Predicted}`,\n          status: \"Misclassified\",\n        })\n      );\n  \n      // 5) Outlets exceeding threshold (still returned for BC)\n      const outletsExceedingThreshold: OutletsExceedingThreshold[] = (\n        rawData.outlets_exceeding_threshold || []\n      ).map((item: any) => ({\n        id: item.id?.toString() || \"\",\n        y_true: item.y_true || 0,\n        y_pred: item.y_pred || 0,\n        percentage_error: item.percentage_error || 0,\n      }));\n  \n      // 6) Detailed metrics\n      const detailedMetrics: Record<string, DetailedMetric> =\n        rawData.detailed_metrics || {};\n  \n      // 7) Other fields\n      return {\n        kpis,\n        errors: { plotData, tableData },\n        referenceMatrix,\n        currentMatrix,\n        outletsExceedingThreshold,\n        detailedMetrics,\n        state: rawData.state || \"Unknown\",\n        coverage: rawData.coverage || {},\n        clusters: rawData.clusters || {},\n        backwardAnalysis: rawData.backward_analysis || {},\n        currentPeriod: rawData.current_period || \"N/A\",\n        totalOutlets: rawData.total_outlets || 0,\n        outletsExceedingThresholdCount:\n          rawData.outlets_exceeding_threshold_count || 0,\n        xaiExplanation: rawData.xai?.explanation || \"No explanation available\",\n      };\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      throw new Error(\"Failed to fetch and process data\");\n    }\n  }\n  "],"names":[],"mappings":"AAAA,8BAA8B;;;;AAmCrB,eAAe;IAgBpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,MAAM,MAAM,CAAC,WAAW,CAAC,EAAE;YAAE,aAAa;QAAU;QACrE,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QACA,MAAM,UAAU,MAAM,SAAS,IAAI;QACnC,QAAQ,GAAG,CAAC,gBAAgB;QAE5B,gBAAgB;QAChB,MAAM,OAAc;YAClB;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,iBAAiB,QAAQ;gBACrD,QAAQ,QAAQ,WAAW,EAAE,iBAAiB,UAAU;YAC1D;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,6BAA6B,OACrD,QAAQ,WAAW,CAAC,yBAAyB,CAAC,OAAO,CAAC,KACtD;YACN;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,8BAA8B,OACtD,QAAQ,WAAW,CAAC,0BAA0B,CAAC,OAAO,CAAC,KACvD;YACN;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,WAAW,aAAa,OAC5C,QAAQ,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,KAC5C;YACN;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,SAAS,aAAa,OAC1C,QAAQ,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,KAC1C;YACN;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,WAAW,UAAU,OACzC,QAAQ,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,KACzC;YACN;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,SAAS,UAAU,OACvC,QAAQ,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KACvC;YACN;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,WAAW,YAAY,OAC3C,QAAQ,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,KAC3C;YACN;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,OAAO,EAAE,SAAS,YAAY,OACzC,QAAQ,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,KACzC;YACN;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,eAAe,EAAE,YAAY,OACxC,QAAQ,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,KACzC;YACN;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,eAAe,EAAE,cAAc,OAC1C,QAAQ,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,KAC3C;YACN;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,iBAAiB,YAAY;gBACzD,QAAQ,QAAQ,WAAW,EAAE,iBAAiB,YAAY;YAC5D;SACD;QAED,+DAA+D;QAC/D,MAAM,kBAA8B,QAAQ,gBAAgB,EAAE,OAAO,EAAE;QACvE,MAAM,gBAA4B,QAAQ,gBAAgB,EAAE,cAAc,EAAE;QAE5E,+CAA+C;QAC/C,MAAM,WAA4B,EAAE;QACpC,MAAM,MAAM,QAAQ,OAAO,IAAI;YAAE,QAAQ,EAAE;YAAE,SAAS,EAAE;YAAE,OAAO,EAAE;QAAC;QACpE,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,IAClB,SAAS,IAAI,CAAC;gBAAE;gBAAG,GAAG;gBAAG,kBAAkB;YAAM;QAEnD,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,IACnB,SAAS,IAAI,CAAC;gBAAE;gBAAG,GAAG;gBAAG,kBAAkB;YAAM;QAEnD,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,IACjB,SAAS,IAAI,CAAC;gBAAE;gBAAG,GAAG;gBAAG,kBAAkB;YAAM;QAEnD,SAAS,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,CAAC,GAAG,EAAE,CAAC;QAEjC,yBAAyB;QACzB,MAAM,YAA8B,CAAC,QAAQ,mBAAmB,IAAI,EAAE,EAAE,GAAG,CACzE,CAAC,OAAc,CAAC;gBACd,IAAI,KAAK,EAAE;gBACX,YAAY,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE,KAAK,SAAS,EAAE;gBACxD,QAAQ;YACV,CAAC;QAGH,yDAAyD;QACzD,MAAM,4BAAyD,CAC7D,QAAQ,2BAA2B,IAAI,EAAE,AAC3C,EAAE,GAAG,CAAC,CAAC,OAAc,CAAC;gBACpB,IAAI,KAAK,EAAE,EAAE,cAAc;gBAC3B,QAAQ,KAAK,MAAM,IAAI;gBACvB,QAAQ,KAAK,MAAM,IAAI;gBACvB,kBAAkB,KAAK,gBAAgB,IAAI;YAC7C,CAAC;QAED,sBAAsB;QACtB,MAAM,kBACJ,QAAQ,gBAAgB,IAAI,CAAC;QAE/B,kBAAkB;QAClB,OAAO;YACL;YACA,QAAQ;gBAAE;gBAAU;YAAU;YAC9B;YACA;YACA;YACA;YACA,OAAO,QAAQ,KAAK,IAAI;YACxB,UAAU,QAAQ,QAAQ,IAAI,CAAC;YAC/B,UAAU,QAAQ,QAAQ,IAAI,CAAC;YAC/B,kBAAkB,QAAQ,iBAAiB,IAAI,CAAC;YAChD,eAAe,QAAQ,cAAc,IAAI;YACzC,cAAc,QAAQ,aAAa,IAAI;YACvC,gCACE,QAAQ,iCAAiC,IAAI;YAC/C,gBAAgB,QAAQ,GAAG,EAAE,eAAe;QAC9C;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/dashboardService.ts"],"sourcesContent":["/**\n * Shared typings\n * -------------------------------------------------------------------------- */\nexport interface Entry {\n  user: string\n  Runtime: string\n  BusinessUnit: string\n  useCase: string\n  ShortCode: string\n  JSONLink: string\n  alertKeeper: string\n}\n\nexport interface EntriesTableFilter {\n  user?: string\n  Runtime?: string\n  BusinessUnit?: string\n  useCase?: string\n  ShortCode?: string\n  JSONLink?: string\n  alertKeeper?: string          // single name – e.g. \"Kalpa\"\n}\n\n/**\n * Utility helpers\n * -------------------------------------------------------------------------- */\nconst eq = (a?: string, b?: string) =>\n  a !== undefined && b !== undefined ? a.toLowerCase() === b.toLowerCase() : true\n\n/**\n * Fetch the entries table from the API and **return only the rows that match\n * the supplied `filters` object**.  \n *\n * The API is *supposed* to filter server‑side, but we’ve seen it sometimes\n * return the full table (all business units, use‑cases, etc.).  To guarantee\n * correctness we:\n *\n *  1. Pass the query‑string parameters that mirror `filters`.\n *  2. Apply the same filters again in the client, so the caller *always* gets\n *     the precise subset it asked for, even if the backend forgets.\n */\nexport async function fetchEntriesTable(\n  filters: EntriesTableFilter = {},\n): Promise<Entry[]> {\n  /* ------------------------------------------------------------------ */\n  /* 1️⃣  Build the query string we’ll send to the server                */\n  /* ------------------------------------------------------------------ */\n  const params = new URLSearchParams()\n  if (filters.user)         params.append('user',         filters.user)\n  if (filters.Runtime)      params.append('Runtime',      filters.Runtime)\n  if (filters.BusinessUnit) params.append('BusinessUnit', filters.BusinessUnit)\n  if (filters.useCase)      params.append('useCase',      filters.useCase)\n  if (filters.ShortCode)    params.append('ShortCode',    filters.ShortCode)\n  if (filters.JSONLink)     params.append('JSONLink',     filters.JSONLink)\n  if (filters.alertKeeper)  params.append('alertKeeper',  filters.alertKeeper)\n\n  /* ------------------------------------------------------------------ */\n  /* 2️⃣  Fetch from the API                                             */\n  /* ------------------------------------------------------------------ */\n  const res = await fetch(`/api/entries-table?${params.toString()}`, {\n    credentials: 'include',\n  })\n\n  if (!res.ok) {\n    throw new Error(`Failed to fetch entries table: ${res.status} ${res.statusText}`)\n  }\n\n  const allRows: Entry[] = await res.json()\n\n  /* ------------------------------------------------------------------ */\n  /* 3️⃣  Apply the same filters client‑side (safety‑net)                */\n  /* ------------------------------------------------------------------ */\n  const rows = allRows.filter((e) => {\n    if (filters.user         && !eq(e.user,          filters.user        )) return false\n    if (filters.Runtime      &&  e.Runtime         !== filters.Runtime     ) return false\n    if (filters.BusinessUnit && !eq(e.BusinessUnit, filters.BusinessUnit)) return false\n    if (filters.useCase      && !eq(e.useCase,      filters.useCase     )) return false\n    if (filters.ShortCode    &&  e.ShortCode       !== filters.ShortCode   ) return false\n    if (filters.JSONLink     &&  e.JSONLink        !== filters.JSONLink    ) return false\n\n    /* alertKeeper: treat it as a comma‑separated list in the source    */\n    if (filters.alertKeeper) {\n      const keepers = e.alertKeeper\n        .split(',')\n        .map((s) => s.trim().toLowerCase())\n      if (!keepers.includes(filters.alertKeeper.toLowerCase())) return false\n    }\n\n    return true\n  })\n\n  return rows\n}\n"],"names":[],"mappings":"AAAA;;8EAE8E;;;AAqB9E;;8EAE8E,GAC9E,MAAM,KAAK,CAAC,GAAY,IACtB,MAAM,aAAa,MAAM,YAAY,EAAE,WAAW,OAAO,EAAE,WAAW,KAAK;AActE,eAAe,kBACpB,UAA8B,CAAC,CAAC;IAEhC,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,SAAS,IAAI;IACnB,IAAI,QAAQ,IAAI,EAAU,OAAO,MAAM,CAAC,QAAgB,QAAQ,IAAI;IACpE,IAAI,QAAQ,OAAO,EAAO,OAAO,MAAM,CAAC,WAAgB,QAAQ,OAAO;IACvE,IAAI,QAAQ,YAAY,EAAE,OAAO,MAAM,CAAC,gBAAgB,QAAQ,YAAY;IAC5E,IAAI,QAAQ,OAAO,EAAO,OAAO,MAAM,CAAC,WAAgB,QAAQ,OAAO;IACvE,IAAI,QAAQ,SAAS,EAAK,OAAO,MAAM,CAAC,aAAgB,QAAQ,SAAS;IACzE,IAAI,QAAQ,QAAQ,EAAM,OAAO,MAAM,CAAC,YAAgB,QAAQ,QAAQ;IACxE,IAAI,QAAQ,WAAW,EAAG,OAAO,MAAM,CAAC,eAAgB,QAAQ,WAAW;IAE3E,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,MAAM,MAAM,MAAM,CAAC,mBAAmB,EAAE,OAAO,QAAQ,IAAI,EAAE;QACjE,aAAa;IACf;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,IAAI,MAAM,CAAC,CAAC,EAAE,IAAI,UAAU,EAAE;IAClF;IAEA,MAAM,UAAmB,MAAM,IAAI,IAAI;IAEvC,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,MAAM,OAAO,QAAQ,MAAM,CAAC,CAAC;QAC3B,IAAI,QAAQ,IAAI,IAAY,CAAC,GAAG,EAAE,IAAI,EAAW,QAAQ,IAAI,GAAW,OAAO;QAC/E,IAAI,QAAQ,OAAO,IAAU,EAAE,OAAO,KAAa,QAAQ,OAAO,EAAO,OAAO;QAChF,IAAI,QAAQ,YAAY,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,QAAQ,YAAY,GAAG,OAAO;QAC9E,IAAI,QAAQ,OAAO,IAAS,CAAC,GAAG,EAAE,OAAO,EAAO,QAAQ,OAAO,GAAQ,OAAO;QAC9E,IAAI,QAAQ,SAAS,IAAQ,EAAE,SAAS,KAAW,QAAQ,SAAS,EAAK,OAAO;QAChF,IAAI,QAAQ,QAAQ,IAAS,EAAE,QAAQ,KAAY,QAAQ,QAAQ,EAAM,OAAO;QAEhF,oEAAoE,GACpE,IAAI,QAAQ,WAAW,EAAE;YACvB,MAAM,UAAU,EAAE,WAAW,CAC1B,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,GAAG,WAAW;YAClC,IAAI,CAAC,QAAQ,QAAQ,CAAC,QAAQ,WAAW,CAAC,WAAW,KAAK,OAAO;QACnE;QAEA,OAAO;IACT;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode4/page.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport D3ConfusionMatrix from \"../../components/D3ConfusionMatrix\"\nimport DriftWarningChart from \"../mode2/DriftWarningChart\"\nimport ReactMarkdown from \"react-markdown\"\nimport { AlertCircle, AlertTriangle, CheckCircle, RefreshCw, Info } from \"lucide-react\"\nimport { Chart, registerables } from \"chart.js\"\nimport { useSearchParams } from \"next/navigation\"\nimport { fetchData, type KPI, type PlotDataPoint, type TableDataPoint } from \"../../services/backendService3\"\nimport { fetchEntriesTable } from \"../../services/dashboardService\"\n\nChart.register(...registerables)\n\n// Define the entry table interface\ninterface EntryTableItem {\n  BusinessUnit: string\n  useCase: string\n  ShortCode: string\n  Runtime: string\n  alertKeeper: string\n}\n\ninterface DetailedMetric {\n  total_samples: number\n  correct_predictions: { count: number; percentage: number }\n  incorrect_predictions: { count: number; percentage: number }\n  misclassifications: Record<string, { count: number; percentage: number }>\n}\n\nexport default function Mode4Page(): React.ReactElement {\n  const searchParams = useSearchParams()\n  const businessUnitParam = searchParams.get(\"businessUnit\") || \"\"\n  const useCaseParam = searchParams.get(\"useCase\") || \"\"\n\n  // --- FILTER STATES ---\n  const [businessUnit, setBusinessUnit] = useState(\"\")\n  const [useCase, setUseCase] = useState(\"\")\n  const [shortCode, setShortCode] = useState(\"\")\n  const [alertKeeperValue, setAlertKeeperValue] = useState(\"\")\n\n  // Entries state (fetched via dashboardService)\n  const [entries, setEntries] = useState<EntryTableItem[]>([])\n  const [runtimeValue, setRuntimeValue] = useState<string>(\"\")\n  const [runtimeOptions, setRuntimeOptions] = useState<string[]>([])\n\n  // --- CORE DATA STATES ---\n  const [kpis, setKpis] = useState<KPI[]>([])\n  const [errors, setErrors] = useState<{\n    plotData: PlotDataPoint[]\n    tableData: TableDataPoint[]\n  }>({ plotData: [], tableData: [] })\n  const [referenceMatrix, setReferenceMatrix] = useState<number[][]>([])\n  const [currentMatrix, setCurrentMatrix] = useState<number[][]>([])\n  const [detailedMetrics, setDetailedMetrics] = useState<Record<string, DetailedMetric>>({})\n  const [xaiExplanation, setXaiExplanation] = useState(\"No explanation available\")\n  const [backendError, setBackendError] = useState<string | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  // --- TABS & PIE STATES ---\n  const [activeTab, setActiveTab] = useState<\"errorByClass\" | \"driftStates\">(\"errorByClass\")\n  const [selectedClass, setSelectedClass] = useState(\"\")\n\n  // --- KPI EXCLUSION LIST ---\n  const excludedKPIs = [\n    \"Jensen–Shannon Divergence\",\n    \"Population Stability Index\",\n    \"Precision (Reference)\",\n    \"Precision (Current)\",\n    \"Recall (Reference)\",\n    \"Recall (Current)\",\n    \"F1 Score (Reference)\",\n    \"F1 Score (Current)\",\n  ]\n\n  // --- HELPERS ---\n  const makeLabels = (n: number) => Array.from({ length: n }, (_, i) => i.toString())\n  const computeSquareSize = (grid: number[][]) => {\n    const maxPx = 300\n    const rows = grid.length\n    const cols = grid[0]?.length || 0\n    if (!rows || !cols) return maxPx\n    const cellSize = Math.min(maxPx / rows, maxPx / cols)\n    return Math.max(rows, cols) * cellSize\n  }\n  const getStatusIcon = (s?: string) => {\n    if (!s) return <Info className=\"h-5 w-5 text-gray-400\" />\n    switch (s.toLowerCase()) {\n      case \"warning\":\n        return <AlertTriangle className=\"h-5 w-5 text-amber-400\" />\n      case \"error\":\n        return <AlertCircle className=\"h-5 w-5 text-rose-500\" />\n      case \"success\":\n      case \"normal\":\n        return <CheckCircle className=\"h-5 w-5 text-emerald-400\" />\n      default:\n        return <Info className=\"h-5 w-5 text-sky-400\" />\n    }\n  }\n  const getStatusColor = (s?: string) => {\n    if (!s) return \"text-gray-400\"\n    switch (s.toLowerCase()) {\n      case \"warning\":\n        return \"text-amber-400\"\n      case \"error\":\n        return \"text-rose-500\"\n      case \"success\":\n      case \"normal\":\n        return \"text-emerald-400\"\n      default:\n        return \"text-sky-400\"\n    }\n  }\n\n  // 1) Fetch entries when businessUnitParam or useCaseParam change\n  useEffect(() => {\n    if (!businessUnitParam || !useCaseParam) return\n\n    const loadEntries = async () => {\n      try {\n        const fetched = await fetchEntriesTable({\n          BusinessUnit: businessUnitParam,\n          useCase: useCaseParam,\n        })\n        // Filter out any placeholder rows\n        const filtered = fetched.filter(\n          (entry) =>\n            entry.BusinessUnit !== \"Not Selected\" &&\n            entry.useCase !== \"Not Selected\" &&\n            entry.ShortCode !== \"Not Available\",\n        )\n        setEntries(filtered)\n\n        if (filtered.length === 0) {\n          setBusinessUnit(\"Not Selected\")\n          setUseCase(\"Not Selected\")\n          setShortCode(\"Not Available\")\n          setRuntimeOptions([])\n          setAlertKeeperValue(\"Not Selected\")\n          setRuntimeValue(\"\")\n        } else {\n          // Initialize with first entry\n          setBusinessUnit(filtered[0].BusinessUnit)\n          setUseCase(filtered[0].useCase)\n          setShortCode(filtered[0].ShortCode)\n\n          const uniqueRuntimes = Array.from(new Set(filtered.map((e) => e.Runtime)))\n          setRuntimeOptions(uniqueRuntimes)\n          setRuntimeValue(uniqueRuntimes[0])\n\n          const initialKeeper = filtered.find((e) => e.Runtime === uniqueRuntimes[0])?.alertKeeper || \"\"\n          setAlertKeeperValue(initialKeeper)\n        }\n      } catch (err) {\n        console.error(err)\n        setBackendError(err instanceof Error ? err.message : \"Failed to load entries\")\n      }\n    }\n\n    loadEntries()\n  }, [businessUnitParam, useCaseParam])\n\n  // 2) Update alertKeeper when runtimeValue or entries change\n  useEffect(() => {\n    if (!runtimeValue) return\n\n    const matched = entries.find((e) => e.Runtime === runtimeValue)\n    setAlertKeeperValue(matched?.alertKeeper || \"Not Selected\")\n  }, [runtimeValue, entries])\n\n  // --- FETCH DATA ---\n  const fetchAllData = async () => {\n    setLoading(true)\n    setBackendError(null)\n    try {\n      const data = await fetchData({ runtime: runtimeValue })\n\n      setKpis(data.kpis)\n      setErrors(data.errors)\n      setReferenceMatrix(data.referenceMatrix)\n      setCurrentMatrix(data.currentMatrix)\n      setDetailedMetrics(data.detailedMetrics)\n      setXaiExplanation(data.xaiExplanation)\n\n      const classes = Object.keys(data.detailedMetrics)\n      if (classes.length) setSelectedClass(classes[0])\n    } catch (err) {\n      console.error(err)\n      setBackendError(err instanceof Error ? err.message : \"Unknown error\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // 3) Fetch dynamic data when runtimeValue changes\n  useEffect(() => {\n    if (runtimeValue) {\n      fetchAllData()\n    }\n  }, [runtimeValue])\n\n  // --- PIE CHARTS EFFECT ---\n  useEffect(() => {\n    if (loading) return\n\n    if (activeTab === \"errorByClass\") {\n      const ctx = document.getElementById(\"errorClassPieChart\") as HTMLCanvasElement\n      if (!ctx) return\n      Chart.getChart(ctx)?.destroy()\n\n      const classes = Object.keys(detailedMetrics)\n      const data = classes.map((cls) => detailedMetrics[cls].incorrect_predictions.percentage)\n      const colors = classes.map((_, i) => `hsl(${(i * 360) / classes.length}, 70%, 50%)`)\n\n      new Chart(ctx, {\n        type: \"pie\",\n        data: {\n          labels: classes,\n          datasets: [{ data, backgroundColor: colors, borderColor: colors, borderWidth: 1 }],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: { position: \"right\", labels: { color: \"#e5e7eb\", font: { size: 12 } } },\n            tooltip: { callbacks: { label: (c) => `${c.label}: ${c.raw.toFixed(1)}%` } },\n          },\n        },\n      })\n    }\n\n    if (activeTab === \"driftStates\") {\n      const ctx = document.getElementById(\"driftPieChart\") as HTMLCanvasElement\n      if (!ctx) return\n      Chart.getChart(ctx)?.destroy()\n\n      const counts = errors.plotData.reduce(\n        (acc, p) => {\n          const s = (p as any).state?.toLowerCase()\n          if (s === \"warning\") acc.warning++\n          else if (s === \"drift\") acc.drift++\n          else acc.normal++\n          return acc\n        },\n        { normal: 0, warning: 0, drift: 0 },\n      )\n      const total = counts.normal + counts.warning + counts.drift || 1\n      const data = [(counts.normal / total) * 100, (counts.warning / total) * 100, (counts.drift / total) * 100].map(\n        (v) => +v.toFixed(1),\n      )\n\n      new Chart(ctx, {\n        type: \"pie\",\n        data: {\n          labels: [\"Normal\", \"Warning\", \"Drift\"],\n          datasets: [\n            {\n              data,\n              backgroundColor: [\"rgba(52,211,153,0.8)\", \"rgba(251,191,36,0.8)\", \"rgba(239,68,68,0.8)\"],\n              borderColor: [\"rgba(52,211,153,1)\", \"rgba(251,191,36,1)\", \"rgba(239,68,68,1)\"],\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: { position: \"right\", labels: { color: \"#e5e7eb\", font: { size: 12 } } },\n            tooltip: { callbacks: { label: (c) => `${c.label}: ${c.raw}%` } },\n          },\n        },\n      })\n    }\n  }, [loading, activeTab, detailedMetrics, errors.plotData])\n\n  return (\n    <div className=\"bg-gradient-to-b from-gray-950 to-gray-900 min-h-screen flex flex-col\">\n      <title>Mode 4 | CL Dashboard</title>\n      <main className=\"flex-grow container mx-auto px-4 py-8 space-y-6\">\n        {backendError && (\n          <div className=\"bg-rose-950/40 border border-rose-800/60 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <AlertCircle className=\"h-5 w-5 text-rose-400 mr-2\" />\n              <p className=\"text-rose-300\">{backendError}</p>\n            </div>\n            <button\n              onClick={fetchAllData}\n              className=\"mt-2 inline-flex items-center gap-2 px-4 py-2 bg-rose-800/50 text-white rounded text-sm\"\n            >\n              <RefreshCw className=\"h-4 w-4\" /> Retry\n            </button>\n          </div>\n        )}\n\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n          <h1 className=\"text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600\">\n            OCTAVE – CL Dashboard\n          </h1>\n          <button\n            onClick={fetchAllData}\n            className=\"inline-flex items-center gap-2 px-4 py-2 bg-sky-800/40 text-white rounded-md text-sm\"\n          >\n            <RefreshCw className=\"h-4 w-4\" /> Refresh\n          </button>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n          <div className=\"lg:col-span-2 bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded-lg border border-sky-800/30\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <p className=\"text-sm text-sky-300\">Business Unit:</p>\n                <p className=\"text-lg text-white\">{loading ? \"…\" : businessUnit || \"Not Selected\"}</p>\n                <p className=\"mt-4 text-sm text-sky-300\">Use Case:</p>\n                <p className=\"text-lg text-white\">{loading ? \"…\" : useCase || \"Not Selected\"}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-sky-300\">Short Code:</p>\n                <p className=\"text-lg text-white\">{loading ? \"…\" : shortCode || \"Not Available\"}</p>\n                <p className=\"mt-4 text-sm text-sky-300\">Alert Keeper:</p>\n                <p className=\"text-lg text-white\">{loading ? \"…\" : alertKeeperValue || \"Not Selected\"}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded-lg border border-sky-800/30\">\n            <p className=\"text-sm text-sky-300\">Runtime</p>\n            <select\n              className=\"mt-1 w-full bg-gray-800/80 border border-sky-700/50 rounded-md p-2 text-white\"\n              value={runtimeValue}\n              onChange={(e) => setRuntimeValue(e.target.value)}\n              disabled={runtimeOptions.length === 0}\n            >\n              {runtimeOptions.length === 0 ? (\n                <option value=\"\">No runtimes available</option>\n              ) : (\n                runtimeOptions.map((runtime) => (\n                  <option key={runtime} value={runtime}>\n                    {runtime}\n                  </option>\n                ))\n              )}\n            </select>\n          </div>\n        </div>\n\n        {/* Drift & Warning / Status Distribution */}\n        <div className=\"grid grid-cols-3 gap-4\">\n          <div className=\"col-span-2 bg-gray-900/80 rounded-xl shadow-xl p-6 border border-gray-700/50\">\n            <h2 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n              Drift & Warning Over Time\n            </h2>\n            <div className=\"bg-gray-800/60 rounded-lg p-4 border border-gray-700/50 h-80\">\n              {!loading ? (\n                <DriftWarningChart plotData={errors.plotData} />\n              ) : (\n                <div className=\"flex items-center justify-center h-full\">\n                  <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"col-span-1 bg-gray-900/80 rounded-xl shadow-xl p-6 border border-gray-700/50\">\n            <h2 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n              Status Distribution\n            </h2>\n            <div className=\"flex border-b border-gray-700/50 mb-4\">\n              <button\n                onClick={() => setActiveTab(\"errorByClass\")}\n                className={`px-3 py-1 -mb-px ${\n                  activeTab === \"errorByClass\" ? \"border-b-2 border-cyan-400 text-cyan-400\" : \"text-gray-400\"\n                }`}\n              >\n                Errors\n              </button>\n              <button\n                onClick={() => setActiveTab(\"driftStates\")}\n                className={`ml-3 px-3 py-1 -mb-px ${\n                  activeTab === \"driftStates\" ? \"border-b-2 border-cyan-400 text-cyan-400\" : \"text-gray-400\"\n                }`}\n              >\n                States\n              </button>\n            </div>\n\n            {activeTab === \"errorByClass\" ? (\n              <>\n                <select\n                  className=\"mb-4 w-full bg-gray-800/80 border border-sky-700/50 rounded-md p-2 text-white\"\n                  value={selectedClass}\n                  onChange={(e) => setSelectedClass(e.target.value)}\n                >\n                  {Object.keys(detailedMetrics).map((cls) => (\n                    <option key={cls} value={cls}>\n                      {cls}\n                    </option>\n                  ))}\n                </select>\n                <div className=\"w-70 h-70 mx-auto\">\n                  <canvas id=\"errorClassPieChart\"></canvas>\n                </div>\n              </>\n            ) : (\n              <div className=\"w-70 h-70 mx-auto\">\n                <canvas id=\"driftPieChart\"></canvas>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* KPI Section */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50\">\n          <h2 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Key Performance Indicators\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n            {kpis\n              .filter((kpi) => !excludedKPIs.includes(kpi.rowKey))\n              .map((kpi) => (\n                <div\n                  key={kpi.rowKey}\n                  className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md hover:shadow-sky-900/20 hover:border-sky-700/50 transition\"\n                >\n                  <h3 className=\"text-lg font-medium text-sky-300 mb-2\">{kpi.rowKey}</h3>\n                  <div className=\"flex items-center\">\n                    <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                      {getStatusIcon(kpi.status)}\n                    </div>\n                    <p className={`text-xl font-semibold ${getStatusColor(kpi.status)}`}>{loading ? \"…\" : kpi.value}</p>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n\n        {/* Reference Matrix */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl p-6 mb-6 border border-gray-700/50 backdrop-blur-sm flex flex-col items-center\">\n          <h2 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Reference Matrix\n          </h2>\n          {!loading && referenceMatrix.length ? (\n            <div\n              className=\"bg-gray-800/60 rounded-lg p-4 border border-gray-700/50\"\n              style={{\n                width: computeSquareSize(referenceMatrix) + 40,\n                height: computeSquareSize(referenceMatrix) + 40,\n              }}\n            >\n              <div\n                style={{\n                  width: computeSquareSize(referenceMatrix),\n                  height: computeSquareSize(referenceMatrix),\n                }}\n              >\n                <D3ConfusionMatrix\n                  data={referenceMatrix}\n                  labels={makeLabels(referenceMatrix[0].length)}\n                  width={computeSquareSize(referenceMatrix)}\n                  height={computeSquareSize(referenceMatrix)}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-64 w-full bg-gray-800/60 rounded-lg border border-gray-700/50\">\n              <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n            </div>\n          )}\n        </div>\n\n        {/* Detailed Metrics */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Detailed Metrics by Class\n          </h2>\n          {loading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto rounded-lg border border-gray-700/50\">\n              <table className=\"min-w-full divide-y divide-gray-700/50\">\n                <thead className=\"bg-gray-800/60\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Class\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Total\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Correct\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Incorrect\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Misclassifications\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-gray-800/30 divide-y divide-gray-700/50\">\n                  {Object.entries(detailedMetrics).map(([cls, dm]) => (\n                    <tr key={cls} className=\"hover:bg-gray-700/30 transition-colors duration-150\">\n                      <td className=\"px-6 py-4 text-sm font-medium text-white\">{cls}</td>\n                      <td className=\"px-6 py-4 text-sm text-gray-300\">{dm.total_samples}</td>\n                      <td className=\"px-6 py-4 text-sm text-emerald-400\">\n                        {dm.correct_predictions.count}{\" \"}\n                        <span className=\"text-gray-400\">({dm.correct_predictions.percentage.toFixed(1)}%)</span>\n                      </td>\n                      <td className=\"px-6 py-4 text-sm text-rose-400\">\n                        {dm.incorrect_predictions.count}{\" \"}\n                        <span className=\"text-gray-400\">({dm.incorrect_predictions.percentage.toFixed(1)}%)</span>\n                      </td>\n                      <td className=\"px-6 py-4 text-sm text-gray-300\">\n                        {Object.entries(dm.misclassifications)\n                          .map(\n                            ([p, m]) => `${p}: ${m.count}${m.percentage > 0 ? ` (${m.percentage.toFixed(1)}%)` : \"\"}`,\n                          )\n                          .join(\", \")}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n\n        {/* XAI Result */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            XAI Result\n          </h2>\n          <div className=\"bg-gray-800/60 rounded-lg p-6 border border-gray-700/50\">\n            {loading ? (\n              <div className=\"flex justify-center py-8\">\n                <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n              </div>\n            ) : (\n              <div className=\"prose prose-invert prose-sky max-w-none\">\n                <ReactMarkdown>{xaiExplanation}</ReactMarkdown>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Misclassified Table */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 border border-gray-700/50 backdrop-blur-sm max-h-96 overflow-y-auto\">\n          <h2 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Misclassified Table\n          </h2>\n          {loading ? (\n            <div className=\"flex justify-center py-12\">\n              <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto rounded-lg border border-gray-700/50\">\n              <table className=\"min-w-full divide-y divide-gray-700/50\">\n                <thead className=\"bg-gray-800/60\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      ID\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      True → Pred\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-gray-800/30 divide-y divide-gray-700/50\">\n                  {errors.tableData.length > 0 ? (\n                    errors.tableData.map((r, i) => (\n                      <tr key={i} className=\"hover:bg-rose-900/20 transition-colors duration-150\">\n                        <td className=\"px-6 py-4 text-sm font-medium text-white\">{r.id}</td>\n                        <td className=\"px-6 py-4 text-sm text-rose-300\">{r.timePeriod}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={2} className=\"px-6 py-4 text-center text-sm text-gray-400\">\n                        No misclassified data\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}